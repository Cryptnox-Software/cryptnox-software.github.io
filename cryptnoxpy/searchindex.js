Search.setIndex({"alltitles":{"1.0.0 - 2021-08-20":[[0,"id66"]],"1.0.3 - 2021-09-07":[[0,"id61"]],"1.0.4 - 2021-09-09":[[0,"id58"]],"1.1.0 - 2021-09-24":[[0,"id53"]],"1.1.1 - 2021-10-06":[[0,"id49"]],"1.1.2 - 2021-10-07":[[0,"id46"]],"1.1.3 - 2021-10-20":[[0,"id43"]],"1.1.4 - 2021-10-21":[[0,"id40"]],"1.1.5 - 2021-10-29":[[0,"id37"]],"1.1.6 - 2021-11-03":[[0,"id34"]],"2.0.0 - 2022-01-03":[[0,"id30"]],"2.0.1 - 2022-01-03":[[0,"id27"]],"2.0.2 - 2022-03-14":[[0,"id24"]],"2.0.3 - 2022-03-14":[[0,"id20"]],"2.1.0 - 2022-06-01":[[0,"id17"]],"2.1.1 - 2022-06-13":[[0,"id14"]],"2.2.0 - 2022-07-13":[[0,"id10"]],"2.2.1 - 2022-07-14":[[0,"id8"]],"2.3.0 - 2022-11-28":[[0,"id6"]],"2.4.0 - 2023-01-31":[[0,"id4"]],"API Reference":[[6,null]],"Added":[[0,"added"],[0,"id11"],[0,"id15"],[0,"id18"],[0,"id31"],[0,"id54"],[0,"id67"]],"Changed":[[0,"changed"],[0,"id21"],[0,"id32"],[0,"id50"],[0,"id55"],[0,"id59"],[0,"id62"]],"Changelog":[[0,null],[0,"id1"]],"Contents:":[[4,null]],"Cryptnox Python Communication Library":[[7,"cryptnox-python-communication-library"]],"Cryptnoxpy Documentation":[[4,null]],"Cryptnoxpy Overview":[[7,null]],"Derivation and keys system":[[7,"derivation-and-keys-system"]],"Documentation":[[7,"documentation"]],"EC Signature":[[7,"ec-signature"]],"Fixed":[[0,"fixed"],[0,"id12"],[0,"id22"],[0,"id25"],[0,"id28"],[0,"id35"],[0,"id38"],[0,"id41"],[0,"id44"],[0,"id47"],[0,"id51"],[0,"id56"],[0,"id64"]],"Initialization and pairing":[[7,"initialization-and-pairing"]],"Installation and requirements":[[7,"installation-and-requirements"]],"Installation issues":[[7,"installation-issues"]],"Installation of this library":[[7,"installation-of-this-library"]],"Library use":[[7,"library-use"]],"License":[[5,null],[7,"license"]],"Module contents":[[1,"module-cryptnoxpy"],[2,"module-cryptnoxpy.card"],[3,"module-cryptnoxpy.cryptos"]],"PIN":[[7,"pin"]],"Recovery":[[7,"recovery"]],"Remote connection":[[7,"remote-connection"]],"Removed":[[0,"removed"],[0,"id63"]],"Seed administration":[[7,"seed-administration"]],"Seed generation":[[7,"seed-generation"]],"Submodules":[[1,"submodules"],[2,"submodules"],[3,"submodules"]],"Subpackages":[[1,"subpackages"]],"Unreleased":[[0,"id2"]],"Update issues":[[7,"update-issues"]],"cryptnoxpy package":[[1,null]],"cryptnoxpy.binary_utils module":[[1,"module-cryptnoxpy.binary_utils"]],"cryptnoxpy.card package":[[2,null]],"cryptnoxpy.card.authenticity module":[[2,"module-cryptnoxpy.card.authenticity"]],"cryptnoxpy.card.base module":[[2,"module-cryptnoxpy.card.base"]],"cryptnoxpy.card.basic_g0 module":[[2,"module-cryptnoxpy.card.basic_g0"]],"cryptnoxpy.card.basic_g1 module":[[2,"module-cryptnoxpy.card.basic_g1"]],"cryptnoxpy.card.custom_bits module":[[2,"module-cryptnoxpy.card.custom_bits"]],"cryptnoxpy.card.nft module":[[2,"module-cryptnoxpy.card.nft"]],"cryptnoxpy.card.user_data module":[[2,"module-cryptnoxpy.card.user_data"]],"cryptnoxpy.connection module":[[1,"module-cryptnoxpy.connection"]],"cryptnoxpy.crypto_utils module":[[1,"module-cryptnoxpy.crypto_utils"]],"cryptnoxpy.cryptos package":[[3,null]],"cryptnoxpy.cryptos.main module":[[3,"module-cryptnoxpy.cryptos.main"]],"cryptnoxpy.cryptos.py2specials module":[[3,"module-cryptnoxpy.cryptos.py2specials"]],"cryptnoxpy.cryptos.py3specials module":[[3,"module-cryptnoxpy.cryptos.py3specials"]],"cryptnoxpy.cryptos.ripemd module":[[3,"module-cryptnoxpy.cryptos.ripemd"]],"cryptnoxpy.enums module":[[1,"module-cryptnoxpy.enums"]],"cryptnoxpy.exceptions module":[[1,"module-cryptnoxpy.exceptions"]],"cryptnoxpy.factory module":[[1,"module-cryptnoxpy.factory"]],"cryptnoxpy.reader module":[[1,"module-cryptnoxpy.reader"]]},"docnames":["changelog","cryptnoxpy","cryptnoxpy.card","cryptnoxpy.cryptos","index","license","modules","overview"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.viewcode":1},"filenames":["changelog.rst","cryptnoxpy.rst","cryptnoxpy.card.rst","cryptnoxpy.cryptos.rst","index.rst","license.rst","modules.rst","overview.rst"],"indexentries":{"__init__() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.__init__",false]],"__init__() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.__init__",false]],"__init__() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.__init__",false]],"__init__() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.__init__",false]],"__init__() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.__init__",false]],"__init__() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.__init__",false]],"__init__() (cryptnoxpy.card.custom_bits.custombits method)":[[2,"cryptnoxpy.card.custom_bits.CustomBits.__init__",false]],"__init__() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.__init__",false]],"__init__() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.__init__",false]],"__init__() (cryptnoxpy.card.user_data.userdata method)":[[2,"cryptnoxpy.card.user_data.UserData.__init__",false]],"__init__() (cryptnoxpy.connection method)":[[1,"cryptnoxpy.Connection.__init__",false]],"__init__() (cryptnoxpy.connection.connection method)":[[1,"cryptnoxpy.connection.Connection.__init__",false]],"__init__() (cryptnoxpy.cryptos.ripemd.ripemd160 method)":[[3,"cryptnoxpy.cryptos.ripemd.RIPEMD160.__init__",false]],"__init__() (cryptnoxpy.cryptos.ripemd.rmdcontext method)":[[3,"cryptnoxpy.cryptos.ripemd.RMDContext.__init__",false]],"__init__() (cryptnoxpy.exceptions.genericexception method)":[[1,"cryptnoxpy.exceptions.GenericException.__init__",false]],"__init__() (cryptnoxpy.exceptions.pinexception method)":[[1,"cryptnoxpy.exceptions.PinException.__init__",false]],"__init__() (cryptnoxpy.exceptions.pukexception method)":[[1,"cryptnoxpy.exceptions.PukException.__init__",false]],"__init__() (cryptnoxpy.reader.nfcreader method)":[[1,"cryptnoxpy.reader.NfcReader.__init__",false]],"__init__() (cryptnoxpy.reader.reader method)":[[1,"cryptnoxpy.reader.Reader.__init__",false]],"__init__() (cryptnoxpy.reader.smartcard method)":[[1,"cryptnoxpy.reader.SmartCard.__init__",false]],"__version__ (in module exceptions)":[[1,"exceptions.__version__",false]],"access() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.access",false]],"add() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.add",false]],"add_privkeys() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.add_privkeys",false]],"add_pubkeys() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.add_pubkeys",false]],"aes_decrypt() (in module cryptnoxpy.crypto_utils)":[[1,"cryptnoxpy.crypto_utils.aes_decrypt",false]],"aes_encrypt() (in module cryptnoxpy.crypto_utils)":[[1,"cryptnoxpy.crypto_utils.aes_encrypt",false]],"alive (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.alive",false]],"alive (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.alive",false]],"applet_version (cryptnoxpy.card.base attribute)":[[2,"cryptnoxpy.card.Base.applet_version",false]],"applet_version (cryptnoxpy.card.basicg0 attribute)":[[2,"cryptnoxpy.card.BasicG0.applet_version",false]],"applet_version (cryptnoxpy.card.basicg1 attribute)":[[2,"cryptnoxpy.card.BasicG1.applet_version",false]],"applet_version (cryptnoxpy.card.nft attribute)":[[2,"cryptnoxpy.card.Nft.applet_version",false]],"auth_type (cryptnoxpy.card.base attribute)":[[2,"cryptnoxpy.card.Base.auth_type",false]],"auth_type (cryptnoxpy.card.basicg0 attribute)":[[2,"cryptnoxpy.card.BasicG0.auth_type",false]],"auth_type (cryptnoxpy.card.basicg1 attribute)":[[2,"cryptnoxpy.card.BasicG1.auth_type",false]],"auth_type (cryptnoxpy.card.nft attribute)":[[2,"cryptnoxpy.card.Nft.auth_type",false]],"authtype (class in cryptnoxpy)":[[1,"cryptnoxpy.AuthType",false]],"authtype (class in cryptnoxpy.enums)":[[1,"cryptnoxpy.enums.AuthType",false]],"b58check_to_bin() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.b58check_to_bin",false]],"b58check_to_hex() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.b58check_to_hex",false]],"base (class in cryptnoxpy.card)":[[2,"cryptnoxpy.card.Base",false]],"base (class in cryptnoxpy.card.base)":[[2,"cryptnoxpy.card.base.Base",false]],"basicg0 (class in cryptnoxpy.card)":[[2,"cryptnoxpy.card.BasicG0",false]],"basicg0 (class in cryptnoxpy.card.basic_g0)":[[2,"cryptnoxpy.card.basic_g0.BasicG0",false]],"basicg1 (class in cryptnoxpy.card)":[[2,"cryptnoxpy.card.BasicG1",false]],"basicg1 (class in cryptnoxpy.card.basic_g1)":[[2,"cryptnoxpy.card.basic_g1.BasicG1",false]],"bin_dbl_sha256() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.bin_dbl_sha256",false]],"bin_dbl_sha256() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.bin_dbl_sha256",false]],"bin_hash160() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.bin_hash160",false]],"bin_ripemd160() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.bin_ripemd160",false]],"bin_sha256() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.bin_sha256",false]],"bin_slowsha() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.bin_slowsha",false]],"bin_to_b58check() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.bin_to_b58check",false]],"binary_to_list() (in module cryptnoxpy.binary_utils)":[[1,"cryptnoxpy.binary_utils.binary_to_list",false]],"bool() (cryptnoxpy.reader.reader method)":[[1,"cryptnoxpy.reader.Reader.bool",false]],"bytes_to_hex_string() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.bytes_to_hex_string",false]],"card (in module cryptnoxpy)":[[1,"cryptnoxpy.Card",false]],"cardclosedexception":[[1,"cryptnoxpy.exceptions.CardClosedException",false]],"cardexception":[[1,"cryptnoxpy.exceptions.CardException",false],[1,"cryptnoxpy.reader.CardException",false]],"cardnotblocked":[[1,"cryptnoxpy.exceptions.CardNotBlocked",false]],"cardtypeexception":[[1,"cryptnoxpy.exceptions.CardTypeException",false]],"certificateexception":[[1,"cryptnoxpy.exceptions.CertificateException",false]],"change_curve() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.change_curve",false]],"change_pairing_key() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.change_pairing_key",false]],"change_pairing_key() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.change_pairing_key",false]],"change_pairing_key() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.change_pairing_key",false]],"change_pairing_key() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.change_pairing_key",false]],"change_pairing_key() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.change_pairing_key",false]],"change_pairing_key() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.change_pairing_key",false]],"change_pin() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.change_pin",false]],"change_pin() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.change_pin",false]],"change_puk() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.change_puk",false]],"change_puk() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.change_puk",false]],"changebase() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.changebase",false]],"check_init() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.check_init",false]],"check_init() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.check_init",false]],"compress() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.compress",false]],"connect() (cryptnoxpy.reader.nfcreader method)":[[1,"cryptnoxpy.reader.NfcReader.connect",false]],"connect() (cryptnoxpy.reader.reader method)":[[1,"cryptnoxpy.reader.Reader.connect",false]],"connect() (cryptnoxpy.reader.smartcard method)":[[1,"cryptnoxpy.reader.SmartCard.connect",false]],"connection (class in cryptnoxpy)":[[1,"cryptnoxpy.Connection",false]],"connection (class in cryptnoxpy.connection)":[[1,"cryptnoxpy.connection.Connection",false]],"connectionexception":[[1,"cryptnoxpy.exceptions.ConnectionException",false],[1,"cryptnoxpy.reader.ConnectionException",false]],"copy() (cryptnoxpy.cryptos.ripemd.ripemd160 method)":[[3,"cryptnoxpy.cryptos.ripemd.RIPEMD160.copy",false]],"copy() (cryptnoxpy.cryptos.ripemd.rmdcontext method)":[[3,"cryptnoxpy.cryptos.ripemd.RMDContext.copy",false]],"count() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.count",false]],"cryptnoxexception":[[1,"cryptnoxpy.exceptions.CryptnoxException",false]],"cryptnoxpy":[[1,"module-cryptnoxpy",false]],"cryptnoxpy.binary_utils":[[1,"module-cryptnoxpy.binary_utils",false]],"cryptnoxpy.card":[[2,"module-cryptnoxpy.card",false]],"cryptnoxpy.card.authenticity":[[2,"module-cryptnoxpy.card.authenticity",false]],"cryptnoxpy.card.base":[[2,"module-cryptnoxpy.card.base",false]],"cryptnoxpy.card.basic_g0":[[2,"module-cryptnoxpy.card.basic_g0",false]],"cryptnoxpy.card.basic_g1":[[2,"module-cryptnoxpy.card.basic_g1",false]],"cryptnoxpy.card.custom_bits":[[2,"module-cryptnoxpy.card.custom_bits",false]],"cryptnoxpy.card.nft":[[2,"module-cryptnoxpy.card.nft",false]],"cryptnoxpy.card.user_data":[[2,"module-cryptnoxpy.card.user_data",false]],"cryptnoxpy.connection":[[1,"module-cryptnoxpy.connection",false]],"cryptnoxpy.crypto_utils":[[1,"module-cryptnoxpy.crypto_utils",false]],"cryptnoxpy.cryptos":[[3,"module-cryptnoxpy.cryptos",false]],"cryptnoxpy.cryptos.main":[[3,"module-cryptnoxpy.cryptos.main",false]],"cryptnoxpy.cryptos.py2specials":[[3,"module-cryptnoxpy.cryptos.py2specials",false]],"cryptnoxpy.cryptos.py3specials":[[3,"module-cryptnoxpy.cryptos.py3specials",false]],"cryptnoxpy.cryptos.ripemd":[[3,"module-cryptnoxpy.cryptos.ripemd",false]],"cryptnoxpy.enums":[[1,"module-cryptnoxpy.enums",false]],"cryptnoxpy.exceptions":[[1,"module-cryptnoxpy.exceptions",false]],"cryptnoxpy.factory":[[1,"module-cryptnoxpy.factory",false]],"cryptnoxpy.reader":[[1,"module-cryptnoxpy.reader",false]],"current_key (cryptnoxpy.derivation attribute)":[[1,"cryptnoxpy.Derivation.CURRENT_KEY",false]],"current_key (cryptnoxpy.enums.derivation attribute)":[[1,"cryptnoxpy.enums.Derivation.CURRENT_KEY",false]],"custom_bits (cryptnoxpy.card.base attribute)":[[2,"cryptnoxpy.card.Base.custom_bits",false]],"custom_bits (cryptnoxpy.card.base.base attribute)":[[2,"cryptnoxpy.card.base.Base.custom_bits",false]],"custombits (class in cryptnoxpy.card.custom_bits)":[[2,"cryptnoxpy.card.custom_bits.CustomBits",false]],"custombitsbase (class in cryptnoxpy.card.custom_bits)":[[2,"cryptnoxpy.card.custom_bits.CustomBitsBase",false]],"dataexception":[[1,"cryptnoxpy.exceptions.DataException",false]],"datavalidationexception":[[1,"cryptnoxpy.exceptions.DataValidationException",false]],"dbl_sha256() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.dbl_sha256",false]],"decode() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.decode",false]],"decode_privkey() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.decode_privkey",false]],"decode_pubkey() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.decode_pubkey",false]],"decode_sig() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.decode_sig",false]],"decompress() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.decompress",false]],"decrypt() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.decrypt",false]],"decrypt() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.decrypt",false]],"decrypt() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.decrypt",false]],"decrypt() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.decrypt",false]],"decrypt() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.decrypt",false]],"decrypt() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.decrypt",false]],"derivation (class in cryptnoxpy)":[[1,"cryptnoxpy.Derivation",false]],"derivation (class in cryptnoxpy.enums)":[[1,"cryptnoxpy.enums.Derivation",false]],"derivationselectionexception":[[1,"cryptnoxpy.exceptions.DerivationSelectionException",false]],"derive (cryptnoxpy.derivation attribute)":[[1,"cryptnoxpy.Derivation.DERIVE",false]],"derive (cryptnoxpy.enums.derivation attribute)":[[1,"cryptnoxpy.enums.Derivation.DERIVE",false]],"derive() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.derive",false]],"derive() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.derive",false]],"derive() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.derive",false]],"derive() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.derive",false]],"derive() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.derive",false]],"derive() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.derive",false]],"derive() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.derive",false]],"derive() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.derive",false]],"derive_and_make_current (cryptnoxpy.derivation attribute)":[[1,"cryptnoxpy.Derivation.DERIVE_AND_MAKE_CURRENT",false]],"derive_and_make_current (cryptnoxpy.enums.derivation attribute)":[[1,"cryptnoxpy.enums.Derivation.DERIVE_AND_MAKE_CURRENT",false]],"deterministic_generate_k() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.deterministic_generate_k",false]],"digest() (cryptnoxpy.cryptos.ripemd.ripemd160 method)":[[3,"cryptnoxpy.cryptos.ripemd.RIPEMD160.digest",false]],"divide() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.divide",false]],"dual (cryptnoxpy.enums.seedsource attribute)":[[1,"cryptnoxpy.enums.SeedSource.DUAL",false]],"dual (cryptnoxpy.seedsource attribute)":[[1,"cryptnoxpy.SeedSource.DUAL",false]],"dual_seed_load() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.dual_seed_load",false]],"dual_seed_load() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.dual_seed_load",false]],"dual_seed_load() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.dual_seed_load",false]],"dual_seed_load() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.dual_seed_load",false]],"dual_seed_load() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.dual_seed_load",false]],"dual_seed_load() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.dual_seed_load",false]],"dual_seed_public_key() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.dual_seed_public_key",false]],"dual_seed_public_key() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.dual_seed_public_key",false]],"dual_seed_public_key() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.dual_seed_public_key",false]],"dual_seed_public_key() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.dual_seed_public_key",false]],"dual_seed_public_key() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.dual_seed_public_key",false]],"dual_seed_public_key() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.dual_seed_public_key",false]],"ec256r1 (cryptnoxpy.enums.slotindex attribute)":[[1,"cryptnoxpy.enums.SlotIndex.EC256R1",false]],"ec256r1 (cryptnoxpy.slotindex attribute)":[[1,"cryptnoxpy.SlotIndex.EC256R1",false]],"ecdsa_verify() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.ecdsa_verify",false]],"ecdsa_verify_addr() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.ecdsa_verify_addr",false]],"electrum_sig_hash() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.electrum_sig_hash",false]],"email (cryptnoxpy.card.base.user attribute)":[[2,"cryptnoxpy.card.base.User.email",false]],"encode() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.encode",false]],"encode_privkey() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.encode_privkey",false]],"encode_pubkey() (in module cryptnoxpy.cryptos)":[[3,"cryptnoxpy.cryptos.encode_pubkey",false]],"encode_pubkey() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.encode_pubkey",false]],"encode_sig() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.encode_sig",false]],"eoskeyerror":[[1,"cryptnoxpy.exceptions.EOSKeyError",false]],"extended (cryptnoxpy.enums.seedsource attribute)":[[1,"cryptnoxpy.enums.SeedSource.EXTENDED",false]],"extended (cryptnoxpy.seedsource attribute)":[[1,"cryptnoxpy.SeedSource.EXTENDED",false]],"extended_public_key (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.extended_public_key",false]],"extended_public_key (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.extended_public_key",false]],"extended_public_key (cryptnoxpy.card.basic_g0.basicg0 property)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.extended_public_key",false]],"extended_public_key (cryptnoxpy.card.basic_g1.basicg1 property)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.extended_public_key",false]],"extended_public_key (cryptnoxpy.card.basicg0 property)":[[2,"cryptnoxpy.card.BasicG0.extended_public_key",false]],"extended_public_key (cryptnoxpy.card.basicg1 property)":[[2,"cryptnoxpy.card.BasicG1.extended_public_key",false]],"external (cryptnoxpy.enums.seedsource attribute)":[[1,"cryptnoxpy.enums.SeedSource.EXTERNAL",false]],"external (cryptnoxpy.seedsource attribute)":[[1,"cryptnoxpy.SeedSource.EXTERNAL",false]],"f0() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.F0",false]],"f1() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.F1",false]],"f2() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.F2",false]],"f3() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.F3",false]],"f4() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.F4",false]],"fake (cryptnoxpy.enums.origin attribute)":[[1,"cryptnoxpy.enums.Origin.FAKE",false]],"fake (cryptnoxpy.origin attribute)":[[1,"cryptnoxpy.Origin.FAKE",false]],"fast_add() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.fast_add",false]],"fido (cryptnoxpy.enums.slotindex attribute)":[[1,"cryptnoxpy.enums.SlotIndex.FIDO",false]],"fido (cryptnoxpy.slotindex attribute)":[[1,"cryptnoxpy.SlotIndex.FIDO",false]],"firmwareexception":[[1,"cryptnoxpy.exceptions.FirmwareException",false]],"from_byte_to_int() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.from_byte_to_int",false]],"from_int_representation_to_bytes() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.from_int_representation_to_bytes",false]],"from_int_to_byte() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.from_int_to_byte",false]],"from_string_to_bytes() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.from_string_to_bytes",false]],"generate_random_number() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.generate_random_number",false]],"generate_random_number() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.generate_random_number",false]],"generate_random_number() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.generate_random_number",false]],"generate_random_number() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.generate_random_number",false]],"generate_random_number() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.generate_random_number",false]],"generate_random_number() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.generate_random_number",false]],"generate_random_number() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.generate_random_number",false]],"generate_random_number() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.generate_random_number",false]],"generate_seed() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.generate_seed",false]],"generate_seed() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.generate_seed",false]],"generate_seed() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.generate_seed",false]],"generate_seed() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.generate_seed",false]],"generate_seed() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.generate_seed",false]],"generate_seed() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.generate_seed",false]],"generate_seed_wrapper() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.generate_seed_wrapper",false]],"generate_seed_wrapper() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.generate_seed_wrapper",false]],"genericexception":[[1,"cryptnoxpy.exceptions.GenericException",false]],"genuinecheckexception":[[1,"cryptnoxpy.exceptions.GenuineCheckException",false]],"get() (in module cryptnoxpy.reader)":[[1,"cryptnoxpy.reader.get",false]],"get_card() (in module cryptnoxpy.factory)":[[1,"cryptnoxpy.factory.get_card",false]],"get_code_string() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.get_code_string",false]],"get_manufacturer_certificate() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.get_manufacturer_certificate",false]],"get_manufacturer_certificate() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.get_manufacturer_certificate",false]],"get_privkey_format() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.get_privkey_format",false]],"get_pubkey_format() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.get_pubkey_format",false]],"get_public_key() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.get_public_key",false]],"get_public_key() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.get_public_key",false]],"get_public_key() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.get_public_key",false]],"get_public_key() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.get_public_key",false]],"get_public_key() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.get_public_key",false]],"get_public_key() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.get_public_key",false]],"get_public_key() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.get_public_key",false]],"get_public_key() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.get_public_key",false]],"get_public_key_clear() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.get_public_key_clear",false]],"get_public_key_clear() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.get_public_key_clear",false]],"get_public_key_clear() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.get_public_key_clear",false]],"get_public_key_clear() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.get_public_key_clear",false]],"get_public_key_clear() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.get_public_key_clear",false]],"get_public_key_clear() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.get_public_key_clear",false]],"get_public_key_clear() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.get_public_key_clear",false]],"get_public_key_clear() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.get_public_key_clear",false]],"get_public_key_extended() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.get_public_key_extended",false]],"get_public_key_extended() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.get_public_key_extended",false]],"get_public_key_extended() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.get_public_key_extended",false]],"get_public_key_extended() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.get_public_key_extended",false]],"get_version_byte() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.get_version_byte",false]],"getg() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.getG",false]],"hash160() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.hash160",false]],"hash_to_int() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.hash_to_int",false]],"hex_to_b58check() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.hex_to_b58check",false]],"hex_to_hash160() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.hex_to_hash160",false]],"hexadecimal_to_list() (in module cryptnoxpy.binary_utils)":[[1,"cryptnoxpy.binary_utils.hexadecimal_to_list",false]],"hexdigest() (cryptnoxpy.cryptos.ripemd.ripemd160 method)":[[3,"cryptnoxpy.cryptos.ripemd.RIPEMD160.hexdigest",false]],"history() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.history",false]],"history() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.history",false]],"history() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.history",false]],"history() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.history",false]],"history() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.history",false]],"history() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.history",false]],"info (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.info",false]],"info (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.info",false]],"init() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.init",false]],"init() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.init",false]],"initializationexception":[[1,"cryptnoxpy.exceptions.InitializationException",false]],"initialized (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.initialized",false]],"initialized (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.initialized",false]],"initialized (cryptnoxpy.card.basic_g0.basicg0 property)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.initialized",false]],"initialized (cryptnoxpy.card.basic_g1.basicg1 property)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.initialized",false]],"initialized (cryptnoxpy.card.basicg0 property)":[[2,"cryptnoxpy.card.BasicG0.initialized",false]],"initialized (cryptnoxpy.card.basicg1 property)":[[2,"cryptnoxpy.card.BasicG1.initialized",false]],"internal (cryptnoxpy.enums.seedsource attribute)":[[1,"cryptnoxpy.enums.SeedSource.INTERNAL",false]],"internal (cryptnoxpy.seedsource attribute)":[[1,"cryptnoxpy.SeedSource.INTERNAL",false]],"inv() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.inv",false]],"is_privkey() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.is_privkey",false]],"is_pubkey() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.is_pubkey",false]],"isinf() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.isinf",false]],"jacobian_add() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.jacobian_add",false]],"jacobian_double() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.jacobian_double",false]],"k1 (cryptnoxpy.enums.keytype attribute)":[[1,"cryptnoxpy.enums.KeyType.K1",false]],"k1 (cryptnoxpy.keytype attribute)":[[1,"cryptnoxpy.KeyType.K1",false]],"keyalreadygenerated":[[1,"cryptnoxpy.exceptions.KeyAlreadyGenerated",false]],"keygenerationexception":[[1,"cryptnoxpy.exceptions.KeyGenerationException",false]],"keyselectionexception":[[1,"cryptnoxpy.exceptions.KeySelectionException",false]],"keytype (class in cryptnoxpy)":[[1,"cryptnoxpy.KeyType",false]],"keytype (class in cryptnoxpy.enums)":[[1,"cryptnoxpy.enums.KeyType",false]],"list_to_hexadecimal() (in module cryptnoxpy.binary_utils)":[[1,"cryptnoxpy.binary_utils.list_to_hexadecimal",false]],"load_seed() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.load_seed",false]],"load_seed() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.load_seed",false]],"load_seed() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.load_seed",false]],"load_seed() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.load_seed",false]],"load_seed() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.load_seed",false]],"load_seed() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.load_seed",false]],"load_seed() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.load_seed",false]],"load_seed() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.load_seed",false]],"load_wrapped_seed() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.load_wrapped_seed",false]],"load_wrapped_seed() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.load_wrapped_seed",false]],"lpad() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.lpad",false]],"magicbyte_to_prefix() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.magicbyte_to_prefix",false]],"manufacturer_certificate() (in module cryptnoxpy.card.authenticity)":[[2,"cryptnoxpy.card.authenticity.manufacturer_certificate",false]],"message (cryptnoxpy.card.base.signaturecheckresult attribute)":[[2,"cryptnoxpy.card.base.SignatureCheckResult.message",false]],"module":[[1,"module-cryptnoxpy",false],[1,"module-cryptnoxpy.binary_utils",false],[1,"module-cryptnoxpy.connection",false],[1,"module-cryptnoxpy.crypto_utils",false],[1,"module-cryptnoxpy.enums",false],[1,"module-cryptnoxpy.exceptions",false],[1,"module-cryptnoxpy.factory",false],[1,"module-cryptnoxpy.reader",false],[2,"module-cryptnoxpy.card",false],[2,"module-cryptnoxpy.card.authenticity",false],[2,"module-cryptnoxpy.card.base",false],[2,"module-cryptnoxpy.card.basic_g0",false],[2,"module-cryptnoxpy.card.basic_g1",false],[2,"module-cryptnoxpy.card.custom_bits",false],[2,"module-cryptnoxpy.card.nft",false],[2,"module-cryptnoxpy.card.user_data",false],[3,"module-cryptnoxpy.cryptos",false],[3,"module-cryptnoxpy.cryptos.main",false],[3,"module-cryptnoxpy.cryptos.py2specials",false],[3,"module-cryptnoxpy.cryptos.py3specials",false],[3,"module-cryptnoxpy.cryptos.ripemd",false]],"multiaccess() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.multiaccess",false]],"name (cryptnoxpy.card.base.user attribute)":[[2,"cryptnoxpy.card.base.User.name",false]],"neg_privkey() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.neg_privkey",false]],"neg_pubkey() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.neg_pubkey",false]],"new() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.new",false]],"nfcreader (class in cryptnoxpy.reader)":[[1,"cryptnoxpy.reader.NfcReader",false]],"nft (class in cryptnoxpy.card)":[[2,"cryptnoxpy.card.Nft",false]],"nft (class in cryptnoxpy.card.nft)":[[2,"cryptnoxpy.card.nft.Nft",false]],"no_auth (cryptnoxpy.authtype attribute)":[[1,"cryptnoxpy.AuthType.NO_AUTH",false]],"no_auth (cryptnoxpy.enums.authtype attribute)":[[1,"cryptnoxpy.enums.AuthType.NO_AUTH",false]],"no_seed (cryptnoxpy.enums.seedsource attribute)":[[1,"cryptnoxpy.enums.SeedSource.NO_SEED",false]],"no_seed (cryptnoxpy.seedsource attribute)":[[1,"cryptnoxpy.SeedSource.NO_SEED",false]],"num_to_var_int() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.num_to_var_int",false]],"open (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.open",false]],"open (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.open",false]],"origin (class in cryptnoxpy)":[[1,"cryptnoxpy.Origin",false]],"origin (class in cryptnoxpy.enums)":[[1,"cryptnoxpy.enums.Origin",false]],"origin (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.origin",false]],"origin (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.origin",false]],"origin() (in module cryptnoxpy.card.authenticity)":[[2,"cryptnoxpy.card.authenticity.origin",false]],"original (cryptnoxpy.enums.origin attribute)":[[1,"cryptnoxpy.enums.Origin.ORIGINAL",false]],"original (cryptnoxpy.origin attribute)":[[1,"cryptnoxpy.Origin.ORIGINAL",false]],"pad_data() (in module cryptnoxpy.binary_utils)":[[1,"cryptnoxpy.binary_utils.pad_data",false]],"path_to_bytes() (in module cryptnoxpy.binary_utils)":[[1,"cryptnoxpy.binary_utils.path_to_bytes",false]],"pin (cryptnoxpy.authtype attribute)":[[1,"cryptnoxpy.AuthType.PIN",false]],"pin (cryptnoxpy.enums.authtype attribute)":[[1,"cryptnoxpy.enums.AuthType.PIN",false]],"pin_authentication (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.pin_authentication",false]],"pin_authentication (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.pin_authentication",false]],"pin_authentication (cryptnoxpy.card.basic_g0.basicg0 property)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.pin_authentication",false]],"pin_authentication (cryptnoxpy.card.basic_g1.basicg1 property)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.pin_authentication",false]],"pin_authentication (cryptnoxpy.card.basicg0 property)":[[2,"cryptnoxpy.card.BasicG0.pin_authentication",false]],"pin_authentication (cryptnoxpy.card.basicg1 property)":[[2,"cryptnoxpy.card.BasicG1.pin_authentication",false]],"pin_rule (cryptnoxpy.card.base attribute)":[[2,"cryptnoxpy.card.Base.pin_rule",false]],"pin_rule (cryptnoxpy.card.base.base attribute)":[[2,"cryptnoxpy.card.base.Base.pin_rule",false]],"pinauthenticationexception":[[1,"cryptnoxpy.exceptions.PinAuthenticationException",false]],"pinexception":[[1,"cryptnoxpy.exceptions.PinException",false]],"pinless_enabled (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.pinless_enabled",false]],"pinless_enabled (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.pinless_enabled",false]],"pinless_enabled (cryptnoxpy.card.basic_g0.basicg0 property)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.pinless_enabled",false]],"pinless_enabled (cryptnoxpy.card.basic_g1.basicg1 property)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.pinless_enabled",false]],"pinless_enabled (cryptnoxpy.card.basicg0 property)":[[2,"cryptnoxpy.card.BasicG0.pinless_enabled",false]],"pinless_enabled (cryptnoxpy.card.basicg1 property)":[[2,"cryptnoxpy.card.BasicG1.pinless_enabled",false]],"pinless_path (cryptnoxpy.derivation attribute)":[[1,"cryptnoxpy.Derivation.PINLESS_PATH",false]],"pinless_path (cryptnoxpy.enums.derivation attribute)":[[1,"cryptnoxpy.enums.Derivation.PINLESS_PATH",false]],"pubkey_to_address() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.pubkey_to_address",false]],"pubkey_to_hash() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.pubkey_to_hash",false]],"pubkey_to_hash_hex() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.pubkey_to_hash_hex",false]],"pubtoaddr() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.pubtoaddr",false]],"puk_length (cryptnoxpy.card.base attribute)":[[2,"cryptnoxpy.card.Base.PUK_LENGTH",false]],"puk_length (cryptnoxpy.card.base.base attribute)":[[2,"cryptnoxpy.card.base.Base.PUK_LENGTH",false]],"puk_length (cryptnoxpy.card.basic_g1.basicg1 attribute)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.PUK_LENGTH",false]],"puk_length (cryptnoxpy.card.basicg1 attribute)":[[2,"cryptnoxpy.card.BasicG1.PUK_LENGTH",false]],"puk_rule (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.puk_rule",false]],"puk_rule (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.puk_rule",false]],"puk_rule (cryptnoxpy.card.basic_g0.basicg0 attribute)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.puk_rule",false]],"puk_rule (cryptnoxpy.card.basic_g1.basicg1 attribute)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.puk_rule",false]],"puk_rule (cryptnoxpy.card.basicg0 attribute)":[[2,"cryptnoxpy.card.BasicG0.puk_rule",false]],"puk_rule (cryptnoxpy.card.basicg1 attribute)":[[2,"cryptnoxpy.card.BasicG1.puk_rule",false]],"pukexception":[[1,"cryptnoxpy.exceptions.PukException",false]],"r() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.R",false]],"r1 (cryptnoxpy.enums.keytype attribute)":[[1,"cryptnoxpy.enums.KeyType.R1",false]],"r1 (cryptnoxpy.keytype attribute)":[[1,"cryptnoxpy.KeyType.R1",false]],"random_string() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.random_string",false]],"reader (class in cryptnoxpy.reader)":[[1,"cryptnoxpy.reader.Reader",false]],"readerexception":[[1,"cryptnoxpy.exceptions.ReaderException",false],[1,"cryptnoxpy.reader.ReaderException",false]],"readpublickeyexception":[[1,"cryptnoxpy.exceptions.ReadPublicKeyException",false]],"remote_read() (cryptnoxpy.connection method)":[[1,"cryptnoxpy.Connection.remote_read",false]],"remote_read() (cryptnoxpy.connection.connection method)":[[1,"cryptnoxpy.connection.Connection.remote_read",false]],"remove_padding() (in module cryptnoxpy.binary_utils)":[[1,"cryptnoxpy.binary_utils.remove_padding",false]],"reset() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.reset",false]],"reset() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.reset",false]],"reset() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.reset",false]],"reset() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.reset",false]],"reset() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.reset",false]],"reset() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.reset",false]],"ripemd160 (class in cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.RIPEMD160",false]],"ripemd160() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.ripemd160",false]],"rmd160final() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.RMD160Final",false]],"rmd160transform() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.RMD160Transform",false]],"rmd160update() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.RMD160Update",false]],"rmdcontext (class in cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.RMDContext",false]],"rol() (in module cryptnoxpy.cryptos.ripemd)":[[3,"cryptnoxpy.cryptos.ripemd.ROL",false]],"rsa (cryptnoxpy.enums.slotindex attribute)":[[1,"cryptnoxpy.enums.SlotIndex.RSA",false]],"rsa (cryptnoxpy.slotindex attribute)":[[1,"cryptnoxpy.SlotIndex.RSA",false]],"safe_from_hex() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.safe_from_hex",false]],"safe_hexlify() (in module cryptnoxpy.cryptos.py3specials)":[[3,"cryptnoxpy.cryptos.py3specials.safe_hexlify",false]],"securechannelexception":[[1,"cryptnoxpy.exceptions.SecureChannelException",false]],"seed_source (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.seed_source",false]],"seed_source (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.seed_source",false]],"seed_source (cryptnoxpy.card.basic_g0.basicg0 property)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.seed_source",false]],"seed_source (cryptnoxpy.card.basic_g1.basicg1 property)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.seed_source",false]],"seed_source (cryptnoxpy.card.basicg0 property)":[[2,"cryptnoxpy.card.BasicG0.seed_source",false]],"seed_source (cryptnoxpy.card.basicg1 property)":[[2,"cryptnoxpy.card.BasicG1.seed_source",false]],"seedexception":[[1,"cryptnoxpy.exceptions.SeedException",false]],"seedsource (class in cryptnoxpy)":[[1,"cryptnoxpy.SeedSource",false]],"seedsource (class in cryptnoxpy.enums)":[[1,"cryptnoxpy.enums.SeedSource",false]],"select_apdu (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.select_apdu",false]],"select_apdu (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.select_apdu",false]],"select_apdu (cryptnoxpy.card.basic_g0.basicg0 attribute)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.select_apdu",false]],"select_apdu (cryptnoxpy.card.basic_g1.basicg1 attribute)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.select_apdu",false]],"select_apdu (cryptnoxpy.card.basicg0 attribute)":[[2,"cryptnoxpy.card.BasicG0.select_apdu",false]],"select_apdu (cryptnoxpy.card.basicg1 attribute)":[[2,"cryptnoxpy.card.BasicG1.select_apdu",false]],"send() (cryptnoxpy.reader.nfcreader method)":[[1,"cryptnoxpy.reader.NfcReader.send",false]],"send() (cryptnoxpy.reader.reader method)":[[1,"cryptnoxpy.reader.Reader.send",false]],"send() (cryptnoxpy.reader.smartcard method)":[[1,"cryptnoxpy.reader.SmartCard.send",false]],"send_apdu() (cryptnoxpy.connection method)":[[1,"cryptnoxpy.Connection.send_apdu",false]],"send_apdu() (cryptnoxpy.connection.connection method)":[[1,"cryptnoxpy.connection.Connection.send_apdu",false]],"send_encrypted() (cryptnoxpy.connection method)":[[1,"cryptnoxpy.Connection.send_encrypted",false]],"send_encrypted() (cryptnoxpy.connection.connection method)":[[1,"cryptnoxpy.connection.Connection.send_encrypted",false]],"serial_number (cryptnoxpy.card.base attribute)":[[2,"cryptnoxpy.card.Base.serial_number",false]],"serial_number (cryptnoxpy.card.basicg0 attribute)":[[2,"cryptnoxpy.card.BasicG0.serial_number",false]],"serial_number (cryptnoxpy.card.basicg1 attribute)":[[2,"cryptnoxpy.card.BasicG1.serial_number",false]],"serial_number (cryptnoxpy.card.nft attribute)":[[2,"cryptnoxpy.card.Nft.serial_number",false]],"session_public_key() (in module cryptnoxpy.card.authenticity)":[[2,"cryptnoxpy.card.authenticity.session_public_key",false]],"set_clearpubkey() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.set_clearpubkey",false]],"set_clearpubkey() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.set_clearpubkey",false]],"set_clearpubkey() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.set_clearpubkey",false]],"set_clearpubkey() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.set_clearpubkey",false]],"set_clearpubkey() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.set_clearpubkey",false]],"set_clearpubkey() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.set_clearpubkey",false]],"set_extended_public_key() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.set_extended_public_key",false]],"set_extended_public_key() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.set_extended_public_key",false]],"set_extended_public_key() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.set_extended_public_key",false]],"set_extended_public_key() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.set_extended_public_key",false]],"set_extended_public_key() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.set_extended_public_key",false]],"set_extended_public_key() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.set_extended_public_key",false]],"set_pin_authentication() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.set_pin_authentication",false]],"set_pin_authentication() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.set_pin_authentication",false]],"set_pin_authentication() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.set_pin_authentication",false]],"set_pin_authentication() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.set_pin_authentication",false]],"set_pin_authentication() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.set_pin_authentication",false]],"set_pin_authentication() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.set_pin_authentication",false]],"set_pin_authentication() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.set_pin_authentication",false]],"set_pin_authentication() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.set_pin_authentication",false]],"set_pinless_path() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.set_pinless_path",false]],"set_pinless_path() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.set_pinless_path",false]],"set_pinless_path() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.set_pinless_path",false]],"set_pinless_path() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.set_pinless_path",false]],"set_pinless_path() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.set_pinless_path",false]],"set_pinless_path() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.set_pinless_path",false]],"set_pinless_path() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.set_pinless_path",false]],"set_pinless_path() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.set_pinless_path",false]],"set_pubexport() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.set_pubexport",false]],"set_pubexport() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.set_pubexport",false]],"set_pubexport() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.set_pubexport",false]],"set_pubexport() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.set_pubexport",false]],"set_pubexport() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.set_pubexport",false]],"set_pubexport() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.set_pubexport",false]],"set_xpubread() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.set_xpubread",false]],"set_xpubread() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.set_xpubread",false]],"set_xpubread() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.set_xpubread",false]],"set_xpubread() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.set_xpubread",false]],"sha256() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.sha256",false]],"sign() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.sign",false]],"sign() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.sign",false]],"sign() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.sign",false]],"sign() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.sign",false]],"sign() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.sign",false]],"sign() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.sign",false]],"sign_public() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.sign_public",false]],"sign_public() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.sign_public",false]],"signature (cryptnoxpy.card.base.signaturecheckresult attribute)":[[2,"cryptnoxpy.card.base.SignatureCheckResult.signature",false]],"signature_check() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.signature_check",false]],"signature_check() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.signature_check",false]],"signature_check() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.signature_check",false]],"signature_check() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.signature_check",false]],"signaturecheckresult (class in cryptnoxpy.card.base)":[[2,"cryptnoxpy.card.base.SignatureCheckResult",false]],"signing_counter (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.signing_counter",false]],"signing_counter (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.signing_counter",false]],"signing_counter (cryptnoxpy.card.basic_g0.basicg0 property)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.signing_counter",false]],"signing_counter (cryptnoxpy.card.basic_g1.basicg1 property)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.signing_counter",false]],"signing_counter (cryptnoxpy.card.basicg0 property)":[[2,"cryptnoxpy.card.BasicG0.signing_counter",false]],"signing_counter (cryptnoxpy.card.basicg1 property)":[[2,"cryptnoxpy.card.BasicG1.signing_counter",false]],"single (cryptnoxpy.enums.seedsource attribute)":[[1,"cryptnoxpy.enums.SeedSource.SINGLE",false]],"single (cryptnoxpy.seedsource attribute)":[[1,"cryptnoxpy.SeedSource.SINGLE",false]],"slice() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.slice",false]],"slotindex (class in cryptnoxpy)":[[1,"cryptnoxpy.SlotIndex",false]],"slotindex (class in cryptnoxpy.enums)":[[1,"cryptnoxpy.enums.SlotIndex",false]],"slowsha() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.slowsha",false]],"smartcard (class in cryptnoxpy.reader)":[[1,"cryptnoxpy.reader.SmartCard",false]],"softlock":[[1,"cryptnoxpy.exceptions.SoftLock",false]],"subtract() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.subtract",false]],"subtract_privkeys() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.subtract_privkeys",false]],"subtract_pubkeys() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.subtract_pubkeys",false]],"sum() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.sum",false]],"to_jacobian() (in module cryptnoxpy.cryptos.main)":[[3,"cryptnoxpy.cryptos.main.to_jacobian",false]],"type (cryptnoxpy.card.base attribute)":[[2,"cryptnoxpy.card.Base.type",false]],"type (cryptnoxpy.card.base.base attribute)":[[2,"cryptnoxpy.card.base.Base.type",false]],"type (cryptnoxpy.card.nft attribute)":[[2,"cryptnoxpy.card.Nft.type",false]],"type (cryptnoxpy.card.nft.nft attribute)":[[2,"cryptnoxpy.card.nft.Nft.type",false]],"unblock_pin() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.unblock_pin",false]],"unblock_pin() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.unblock_pin",false]],"unknown (cryptnoxpy.enums.origin attribute)":[[1,"cryptnoxpy.enums.Origin.UNKNOWN",false]],"unknown (cryptnoxpy.origin attribute)":[[1,"cryptnoxpy.Origin.UNKNOWN",false]],"update() (cryptnoxpy.cryptos.ripemd.ripemd160 method)":[[3,"cryptnoxpy.cryptos.ripemd.RIPEMD160.update",false]],"user (class in cryptnoxpy.card.base)":[[2,"cryptnoxpy.card.base.User",false]],"user_data (cryptnoxpy.card.base attribute)":[[2,"cryptnoxpy.card.Base.user_data",false]],"user_data (cryptnoxpy.card.base.base attribute)":[[2,"cryptnoxpy.card.base.Base.user_data",false]],"user_key (cryptnoxpy.authtype attribute)":[[1,"cryptnoxpy.AuthType.USER_KEY",false]],"user_key (cryptnoxpy.enums.authtype attribute)":[[1,"cryptnoxpy.enums.AuthType.USER_KEY",false]],"user_key_add() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.user_key_add",false]],"user_key_add() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.user_key_add",false]],"user_key_add() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.user_key_add",false]],"user_key_add() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.user_key_add",false]],"user_key_add() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.user_key_add",false]],"user_key_add() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.user_key_add",false]],"user_key_add() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.user_key_add",false]],"user_key_add() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.user_key_add",false]],"user_key_challenge_response_nonce() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.user_key_challenge_response_nonce",false]],"user_key_challenge_response_nonce() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.user_key_challenge_response_nonce",false]],"user_key_challenge_response_nonce() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.user_key_challenge_response_nonce",false]],"user_key_challenge_response_nonce() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.user_key_challenge_response_nonce",false]],"user_key_challenge_response_nonce() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.user_key_challenge_response_nonce",false]],"user_key_challenge_response_nonce() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.user_key_challenge_response_nonce",false]],"user_key_challenge_response_nonce() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.user_key_challenge_response_nonce",false]],"user_key_challenge_response_nonce() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.user_key_challenge_response_nonce",false]],"user_key_challenge_response_open() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.user_key_challenge_response_open",false]],"user_key_challenge_response_open() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.user_key_challenge_response_open",false]],"user_key_challenge_response_open() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.user_key_challenge_response_open",false]],"user_key_challenge_response_open() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.user_key_challenge_response_open",false]],"user_key_challenge_response_open() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.user_key_challenge_response_open",false]],"user_key_challenge_response_open() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.user_key_challenge_response_open",false]],"user_key_challenge_response_open() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.user_key_challenge_response_open",false]],"user_key_challenge_response_open() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.user_key_challenge_response_open",false]],"user_key_delete() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.user_key_delete",false]],"user_key_delete() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.user_key_delete",false]],"user_key_delete() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.user_key_delete",false]],"user_key_delete() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.user_key_delete",false]],"user_key_delete() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.user_key_delete",false]],"user_key_delete() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.user_key_delete",false]],"user_key_delete() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.user_key_delete",false]],"user_key_delete() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.user_key_delete",false]],"user_key_enabled() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.user_key_enabled",false]],"user_key_enabled() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.user_key_enabled",false]],"user_key_enabled() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.user_key_enabled",false]],"user_key_enabled() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.user_key_enabled",false]],"user_key_enabled() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.user_key_enabled",false]],"user_key_enabled() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.user_key_enabled",false]],"user_key_enabled() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.user_key_enabled",false]],"user_key_enabled() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.user_key_enabled",false]],"user_key_info() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.user_key_info",false]],"user_key_info() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.user_key_info",false]],"user_key_info() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.user_key_info",false]],"user_key_info() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.user_key_info",false]],"user_key_info() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.user_key_info",false]],"user_key_info() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.user_key_info",false]],"user_key_info() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.user_key_info",false]],"user_key_info() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.user_key_info",false]],"user_key_signature_open() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.user_key_signature_open",false]],"user_key_signature_open() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.user_key_signature_open",false]],"user_key_signature_open() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.user_key_signature_open",false]],"user_key_signature_open() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.user_key_signature_open",false]],"user_key_signature_open() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.user_key_signature_open",false]],"user_key_signature_open() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.user_key_signature_open",false]],"user_key_signature_open() (cryptnoxpy.card.nft method)":[[2,"cryptnoxpy.card.Nft.user_key_signature_open",false]],"user_key_signature_open() (cryptnoxpy.card.nft.nft method)":[[2,"cryptnoxpy.card.nft.Nft.user_key_signature_open",false]],"userdata (class in cryptnoxpy.card.user_data)":[[2,"cryptnoxpy.card.user_data.UserData",false]],"userdatabase (class in cryptnoxpy.card.user_data)":[[2,"cryptnoxpy.card.user_data.UserDataBase",false]],"valid_key (cryptnoxpy.card.base property)":[[2,"cryptnoxpy.card.Base.valid_key",false]],"valid_key (cryptnoxpy.card.base.base property)":[[2,"cryptnoxpy.card.base.Base.valid_key",false]],"valid_key (cryptnoxpy.card.basic_g0.basicg0 property)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.valid_key",false]],"valid_key (cryptnoxpy.card.basic_g1.basicg1 property)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.valid_key",false]],"valid_key (cryptnoxpy.card.basicg0 property)":[[2,"cryptnoxpy.card.BasicG0.valid_key",false]],"valid_key (cryptnoxpy.card.basicg1 property)":[[2,"cryptnoxpy.card.BasicG1.valid_key",false]],"valid_pin() (cryptnoxpy.card.base static method)":[[2,"cryptnoxpy.card.Base.valid_pin",false]],"valid_pin() (cryptnoxpy.card.base.base static method)":[[2,"cryptnoxpy.card.base.Base.valid_pin",false]],"valid_puk() (cryptnoxpy.card.base static method)":[[2,"cryptnoxpy.card.Base.valid_puk",false]],"valid_puk() (cryptnoxpy.card.base.base static method)":[[2,"cryptnoxpy.card.base.Base.valid_puk",false]],"valid_puk() (cryptnoxpy.card.basic_g0.basicg0 static method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.valid_puk",false]],"valid_puk() (cryptnoxpy.card.basic_g1.basicg1 static method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.valid_puk",false]],"valid_puk() (cryptnoxpy.card.basicg0 static method)":[[2,"cryptnoxpy.card.BasicG0.valid_puk",false]],"valid_puk() (cryptnoxpy.card.basicg1 static method)":[[2,"cryptnoxpy.card.BasicG1.valid_puk",false]],"verify_pin() (cryptnoxpy.card.base method)":[[2,"cryptnoxpy.card.Base.verify_pin",false]],"verify_pin() (cryptnoxpy.card.base.base method)":[[2,"cryptnoxpy.card.base.Base.verify_pin",false]],"verify_pin() (cryptnoxpy.card.basic_g0.basicg0 method)":[[2,"cryptnoxpy.card.basic_g0.BasicG0.verify_pin",false]],"verify_pin() (cryptnoxpy.card.basic_g1.basicg1 method)":[[2,"cryptnoxpy.card.basic_g1.BasicG1.verify_pin",false]],"verify_pin() (cryptnoxpy.card.basicg0 method)":[[2,"cryptnoxpy.card.BasicG0.verify_pin",false]],"verify_pin() (cryptnoxpy.card.basicg1 method)":[[2,"cryptnoxpy.card.BasicG1.verify_pin",false]],"wrapped (cryptnoxpy.enums.seedsource attribute)":[[1,"cryptnoxpy.enums.SeedSource.WRAPPED",false]],"wrapped (cryptnoxpy.seedsource attribute)":[[1,"cryptnoxpy.SeedSource.WRAPPED",false]]},"objects":{"":[[1,0,0,"-","cryptnoxpy"]],"cryptnoxpy":[[1,1,1,"","AuthType"],[1,2,1,"","Card"],[1,1,1,"","Connection"],[1,1,1,"","Derivation"],[1,1,1,"","KeyType"],[1,1,1,"","Origin"],[1,1,1,"","SeedSource"],[1,1,1,"","SlotIndex"],[1,0,0,"-","binary_utils"],[2,0,0,"-","card"],[1,0,0,"-","connection"],[1,0,0,"-","crypto_utils"],[3,0,0,"-","cryptos"],[1,0,0,"-","enums"],[1,0,0,"-","exceptions"],[1,0,0,"-","factory"],[1,0,0,"-","reader"]],"cryptnoxpy.AuthType":[[1,2,1,"","NO_AUTH"],[1,2,1,"","PIN"],[1,2,1,"","USER_KEY"]],"cryptnoxpy.Connection":[[1,3,1,"","__init__"],[1,3,1,"","remote_read"],[1,3,1,"","send_apdu"],[1,3,1,"","send_encrypted"]],"cryptnoxpy.Derivation":[[1,2,1,"","CURRENT_KEY"],[1,2,1,"","DERIVE"],[1,2,1,"","DERIVE_AND_MAKE_CURRENT"],[1,2,1,"","PINLESS_PATH"]],"cryptnoxpy.KeyType":[[1,2,1,"","K1"],[1,2,1,"","R1"]],"cryptnoxpy.Origin":[[1,2,1,"","FAKE"],[1,2,1,"","ORIGINAL"],[1,2,1,"","UNKNOWN"]],"cryptnoxpy.SeedSource":[[1,2,1,"","DUAL"],[1,2,1,"","EXTENDED"],[1,2,1,"","EXTERNAL"],[1,2,1,"","INTERNAL"],[1,2,1,"","NO_SEED"],[1,2,1,"","SINGLE"],[1,2,1,"","WRAPPED"]],"cryptnoxpy.SlotIndex":[[1,2,1,"","EC256R1"],[1,2,1,"","FIDO"],[1,2,1,"","RSA"]],"cryptnoxpy.binary_utils":[[1,4,1,"","binary_to_list"],[1,4,1,"","hexadecimal_to_list"],[1,4,1,"","list_to_hexadecimal"],[1,4,1,"","pad_data"],[1,4,1,"","path_to_bytes"],[1,4,1,"","remove_padding"]],"cryptnoxpy.card":[[2,1,1,"","Base"],[2,1,1,"","BasicG0"],[2,1,1,"","BasicG1"],[2,1,1,"","Nft"],[2,0,0,"-","authenticity"],[2,0,0,"-","base"],[2,0,0,"-","basic_g0"],[2,0,0,"-","basic_g1"],[2,0,0,"-","custom_bits"],[2,0,0,"-","nft"],[2,0,0,"-","user_data"]],"cryptnoxpy.card.Base":[[2,2,1,"","PUK_LENGTH"],[2,3,1,"","__init__"],[2,5,1,"","alive"],[2,2,1,"","applet_version"],[2,2,1,"","auth_type"],[2,3,1,"","change_pairing_key"],[2,3,1,"","change_pin"],[2,3,1,"","change_puk"],[2,3,1,"","check_init"],[2,2,1,"","custom_bits"],[2,3,1,"","decrypt"],[2,3,1,"","derive"],[2,3,1,"","dual_seed_load"],[2,3,1,"","dual_seed_public_key"],[2,5,1,"","extended_public_key"],[2,3,1,"","generate_random_number"],[2,3,1,"","generate_seed"],[2,3,1,"","get_public_key"],[2,3,1,"","get_public_key_clear"],[2,3,1,"","get_public_key_extended"],[2,3,1,"","history"],[2,5,1,"","info"],[2,3,1,"","init"],[2,5,1,"","initialized"],[2,3,1,"","load_seed"],[2,5,1,"","open"],[2,5,1,"","origin"],[2,5,1,"","pin_authentication"],[2,2,1,"","pin_rule"],[2,5,1,"","pinless_enabled"],[2,5,1,"","puk_rule"],[2,3,1,"","reset"],[2,5,1,"","seed_source"],[2,5,1,"","select_apdu"],[2,2,1,"","serial_number"],[2,3,1,"","set_clearpubkey"],[2,3,1,"","set_extended_public_key"],[2,3,1,"","set_pin_authentication"],[2,3,1,"","set_pinless_path"],[2,3,1,"","set_pubexport"],[2,3,1,"","set_xpubread"],[2,3,1,"","sign"],[2,3,1,"","signature_check"],[2,5,1,"","signing_counter"],[2,2,1,"","type"],[2,3,1,"","unblock_pin"],[2,2,1,"","user_data"],[2,3,1,"","user_key_add"],[2,3,1,"","user_key_challenge_response_nonce"],[2,3,1,"","user_key_challenge_response_open"],[2,3,1,"","user_key_delete"],[2,3,1,"","user_key_enabled"],[2,3,1,"","user_key_info"],[2,3,1,"","user_key_signature_open"],[2,5,1,"","valid_key"],[2,3,1,"","valid_pin"],[2,3,1,"","valid_puk"],[2,3,1,"","verify_pin"]],"cryptnoxpy.card.BasicG0":[[2,3,1,"","__init__"],[2,2,1,"","applet_version"],[2,2,1,"","auth_type"],[2,3,1,"","change_pairing_key"],[2,3,1,"","decrypt"],[2,3,1,"","derive"],[2,3,1,"","dual_seed_load"],[2,3,1,"","dual_seed_public_key"],[2,5,1,"","extended_public_key"],[2,3,1,"","generate_random_number"],[2,3,1,"","generate_seed"],[2,3,1,"","get_public_key"],[2,3,1,"","get_public_key_clear"],[2,3,1,"","history"],[2,5,1,"","initialized"],[2,3,1,"","load_seed"],[2,5,1,"","pin_authentication"],[2,5,1,"","pinless_enabled"],[2,2,1,"","puk_rule"],[2,3,1,"","reset"],[2,5,1,"","seed_source"],[2,2,1,"","select_apdu"],[2,2,1,"","serial_number"],[2,3,1,"","set_extended_public_key"],[2,3,1,"","set_pin_authentication"],[2,3,1,"","set_pinless_path"],[2,3,1,"","sign"],[2,5,1,"","signing_counter"],[2,3,1,"","user_key_add"],[2,3,1,"","user_key_challenge_response_nonce"],[2,3,1,"","user_key_challenge_response_open"],[2,3,1,"","user_key_delete"],[2,3,1,"","user_key_enabled"],[2,3,1,"","user_key_info"],[2,3,1,"","user_key_signature_open"],[2,5,1,"","valid_key"],[2,3,1,"","valid_puk"],[2,3,1,"","verify_pin"]],"cryptnoxpy.card.BasicG1":[[2,2,1,"","PUK_LENGTH"],[2,3,1,"","__init__"],[2,2,1,"","applet_version"],[2,2,1,"","auth_type"],[2,3,1,"","change_pairing_key"],[2,3,1,"","decrypt"],[2,3,1,"","derive"],[2,3,1,"","dual_seed_load"],[2,3,1,"","dual_seed_public_key"],[2,5,1,"","extended_public_key"],[2,3,1,"","generate_random_number"],[2,3,1,"","generate_seed"],[2,3,1,"","generate_seed_wrapper"],[2,3,1,"","get_manufacturer_certificate"],[2,3,1,"","get_public_key"],[2,3,1,"","get_public_key_clear"],[2,3,1,"","get_public_key_extended"],[2,3,1,"","history"],[2,5,1,"","initialized"],[2,3,1,"","load_seed"],[2,3,1,"","load_wrapped_seed"],[2,5,1,"","pin_authentication"],[2,5,1,"","pinless_enabled"],[2,2,1,"","puk_rule"],[2,3,1,"","reset"],[2,5,1,"","seed_source"],[2,2,1,"","select_apdu"],[2,2,1,"","serial_number"],[2,3,1,"","set_clearpubkey"],[2,3,1,"","set_extended_public_key"],[2,3,1,"","set_pin_authentication"],[2,3,1,"","set_pinless_path"],[2,3,1,"","set_pubexport"],[2,3,1,"","set_xpubread"],[2,3,1,"","sign"],[2,3,1,"","sign_public"],[2,5,1,"","signing_counter"],[2,3,1,"","user_key_add"],[2,3,1,"","user_key_challenge_response_nonce"],[2,3,1,"","user_key_challenge_response_open"],[2,3,1,"","user_key_delete"],[2,3,1,"","user_key_enabled"],[2,3,1,"","user_key_info"],[2,3,1,"","user_key_signature_open"],[2,5,1,"","valid_key"],[2,3,1,"","valid_puk"],[2,3,1,"","verify_pin"]],"cryptnoxpy.card.Nft":[[2,3,1,"","__init__"],[2,2,1,"","applet_version"],[2,2,1,"","auth_type"],[2,3,1,"","derive"],[2,3,1,"","generate_random_number"],[2,3,1,"","get_public_key"],[2,3,1,"","get_public_key_clear"],[2,3,1,"","load_seed"],[2,2,1,"","serial_number"],[2,3,1,"","set_clearpubkey"],[2,3,1,"","set_pin_authentication"],[2,3,1,"","set_pinless_path"],[2,3,1,"","set_pubexport"],[2,3,1,"","signature_check"],[2,2,1,"","type"],[2,3,1,"","user_key_add"],[2,3,1,"","user_key_challenge_response_nonce"],[2,3,1,"","user_key_challenge_response_open"],[2,3,1,"","user_key_delete"],[2,3,1,"","user_key_enabled"],[2,3,1,"","user_key_info"],[2,3,1,"","user_key_signature_open"]],"cryptnoxpy.card.authenticity":[[2,4,1,"","manufacturer_certificate"],[2,4,1,"","origin"],[2,4,1,"","session_public_key"]],"cryptnoxpy.card.base":[[2,1,1,"","Base"],[2,1,1,"","SignatureCheckResult"],[2,1,1,"","User"]],"cryptnoxpy.card.base.Base":[[2,2,1,"","PUK_LENGTH"],[2,3,1,"","__init__"],[2,5,1,"","alive"],[2,3,1,"","change_pairing_key"],[2,3,1,"","change_pin"],[2,3,1,"","change_puk"],[2,3,1,"","check_init"],[2,2,1,"","custom_bits"],[2,3,1,"","decrypt"],[2,3,1,"","derive"],[2,3,1,"","dual_seed_load"],[2,3,1,"","dual_seed_public_key"],[2,5,1,"","extended_public_key"],[2,3,1,"","generate_random_number"],[2,3,1,"","generate_seed"],[2,3,1,"","get_public_key"],[2,3,1,"","get_public_key_clear"],[2,3,1,"","get_public_key_extended"],[2,3,1,"","history"],[2,5,1,"","info"],[2,3,1,"","init"],[2,5,1,"","initialized"],[2,3,1,"","load_seed"],[2,5,1,"","open"],[2,5,1,"","origin"],[2,5,1,"","pin_authentication"],[2,2,1,"","pin_rule"],[2,5,1,"","pinless_enabled"],[2,5,1,"","puk_rule"],[2,3,1,"","reset"],[2,5,1,"","seed_source"],[2,5,1,"","select_apdu"],[2,3,1,"","set_clearpubkey"],[2,3,1,"","set_extended_public_key"],[2,3,1,"","set_pin_authentication"],[2,3,1,"","set_pinless_path"],[2,3,1,"","set_pubexport"],[2,3,1,"","set_xpubread"],[2,3,1,"","sign"],[2,3,1,"","signature_check"],[2,5,1,"","signing_counter"],[2,2,1,"","type"],[2,3,1,"","unblock_pin"],[2,2,1,"","user_data"],[2,3,1,"","user_key_add"],[2,3,1,"","user_key_challenge_response_nonce"],[2,3,1,"","user_key_challenge_response_open"],[2,3,1,"","user_key_delete"],[2,3,1,"","user_key_enabled"],[2,3,1,"","user_key_info"],[2,3,1,"","user_key_signature_open"],[2,5,1,"","valid_key"],[2,3,1,"","valid_pin"],[2,3,1,"","valid_puk"],[2,3,1,"","verify_pin"]],"cryptnoxpy.card.base.SignatureCheckResult":[[2,2,1,"","message"],[2,2,1,"","signature"]],"cryptnoxpy.card.base.User":[[2,2,1,"","email"],[2,2,1,"","name"]],"cryptnoxpy.card.basic_g0":[[2,1,1,"","BasicG0"]],"cryptnoxpy.card.basic_g0.BasicG0":[[2,3,1,"","__init__"],[2,3,1,"","change_pairing_key"],[2,3,1,"","decrypt"],[2,3,1,"","derive"],[2,3,1,"","dual_seed_load"],[2,3,1,"","dual_seed_public_key"],[2,5,1,"","extended_public_key"],[2,3,1,"","generate_random_number"],[2,3,1,"","generate_seed"],[2,3,1,"","get_public_key"],[2,3,1,"","get_public_key_clear"],[2,3,1,"","history"],[2,5,1,"","initialized"],[2,3,1,"","load_seed"],[2,5,1,"","pin_authentication"],[2,5,1,"","pinless_enabled"],[2,2,1,"","puk_rule"],[2,3,1,"","reset"],[2,5,1,"","seed_source"],[2,2,1,"","select_apdu"],[2,3,1,"","set_extended_public_key"],[2,3,1,"","set_pin_authentication"],[2,3,1,"","set_pinless_path"],[2,3,1,"","sign"],[2,5,1,"","signing_counter"],[2,3,1,"","user_key_add"],[2,3,1,"","user_key_challenge_response_nonce"],[2,3,1,"","user_key_challenge_response_open"],[2,3,1,"","user_key_delete"],[2,3,1,"","user_key_enabled"],[2,3,1,"","user_key_info"],[2,3,1,"","user_key_signature_open"],[2,5,1,"","valid_key"],[2,3,1,"","valid_puk"],[2,3,1,"","verify_pin"]],"cryptnoxpy.card.basic_g1":[[2,1,1,"","BasicG1"]],"cryptnoxpy.card.basic_g1.BasicG1":[[2,2,1,"","PUK_LENGTH"],[2,3,1,"","__init__"],[2,3,1,"","change_pairing_key"],[2,3,1,"","decrypt"],[2,3,1,"","derive"],[2,3,1,"","dual_seed_load"],[2,3,1,"","dual_seed_public_key"],[2,5,1,"","extended_public_key"],[2,3,1,"","generate_random_number"],[2,3,1,"","generate_seed"],[2,3,1,"","generate_seed_wrapper"],[2,3,1,"","get_manufacturer_certificate"],[2,3,1,"","get_public_key"],[2,3,1,"","get_public_key_clear"],[2,3,1,"","get_public_key_extended"],[2,3,1,"","history"],[2,5,1,"","initialized"],[2,3,1,"","load_seed"],[2,3,1,"","load_wrapped_seed"],[2,5,1,"","pin_authentication"],[2,5,1,"","pinless_enabled"],[2,2,1,"","puk_rule"],[2,3,1,"","reset"],[2,5,1,"","seed_source"],[2,2,1,"","select_apdu"],[2,3,1,"","set_clearpubkey"],[2,3,1,"","set_extended_public_key"],[2,3,1,"","set_pin_authentication"],[2,3,1,"","set_pinless_path"],[2,3,1,"","set_pubexport"],[2,3,1,"","set_xpubread"],[2,3,1,"","sign"],[2,3,1,"","sign_public"],[2,5,1,"","signing_counter"],[2,3,1,"","user_key_add"],[2,3,1,"","user_key_challenge_response_nonce"],[2,3,1,"","user_key_challenge_response_open"],[2,3,1,"","user_key_delete"],[2,3,1,"","user_key_enabled"],[2,3,1,"","user_key_info"],[2,3,1,"","user_key_signature_open"],[2,5,1,"","valid_key"],[2,3,1,"","valid_puk"],[2,3,1,"","verify_pin"]],"cryptnoxpy.card.custom_bits":[[2,1,1,"","CustomBits"],[2,1,1,"","CustomBitsBase"]],"cryptnoxpy.card.custom_bits.CustomBits":[[2,3,1,"","__init__"]],"cryptnoxpy.card.nft":[[2,1,1,"","Nft"]],"cryptnoxpy.card.nft.Nft":[[2,3,1,"","__init__"],[2,3,1,"","derive"],[2,3,1,"","generate_random_number"],[2,3,1,"","get_public_key"],[2,3,1,"","get_public_key_clear"],[2,3,1,"","load_seed"],[2,3,1,"","set_clearpubkey"],[2,3,1,"","set_pin_authentication"],[2,3,1,"","set_pinless_path"],[2,3,1,"","set_pubexport"],[2,3,1,"","signature_check"],[2,2,1,"","type"],[2,3,1,"","user_key_add"],[2,3,1,"","user_key_challenge_response_nonce"],[2,3,1,"","user_key_challenge_response_open"],[2,3,1,"","user_key_delete"],[2,3,1,"","user_key_enabled"],[2,3,1,"","user_key_info"],[2,3,1,"","user_key_signature_open"]],"cryptnoxpy.card.user_data":[[2,1,1,"","UserData"],[2,1,1,"","UserDataBase"]],"cryptnoxpy.card.user_data.UserData":[[2,3,1,"","__init__"]],"cryptnoxpy.connection":[[1,1,1,"","Connection"]],"cryptnoxpy.connection.Connection":[[1,3,1,"","__init__"],[1,3,1,"","remote_read"],[1,3,1,"","send_apdu"],[1,3,1,"","send_encrypted"]],"cryptnoxpy.crypto_utils":[[1,4,1,"","aes_decrypt"],[1,4,1,"","aes_encrypt"]],"cryptnoxpy.cryptos":[[3,4,1,"","encode_pubkey"],[3,0,0,"-","main"],[3,0,0,"-","py2specials"],[3,0,0,"-","py3specials"],[3,0,0,"-","ripemd"]],"cryptnoxpy.cryptos.main":[[3,4,1,"","access"],[3,4,1,"","add"],[3,4,1,"","add_privkeys"],[3,4,1,"","add_pubkeys"],[3,4,1,"","b58check_to_bin"],[3,4,1,"","b58check_to_hex"],[3,4,1,"","bin_dbl_sha256"],[3,4,1,"","bin_hash160"],[3,4,1,"","bin_ripemd160"],[3,4,1,"","bin_sha256"],[3,4,1,"","bin_slowsha"],[3,4,1,"","change_curve"],[3,4,1,"","compress"],[3,4,1,"","count"],[3,4,1,"","dbl_sha256"],[3,4,1,"","decode_privkey"],[3,4,1,"","decode_pubkey"],[3,4,1,"","decode_sig"],[3,4,1,"","decompress"],[3,4,1,"","deterministic_generate_k"],[3,4,1,"","divide"],[3,4,1,"","ecdsa_verify"],[3,4,1,"","ecdsa_verify_addr"],[3,4,1,"","electrum_sig_hash"],[3,4,1,"","encode_privkey"],[3,4,1,"","encode_pubkey"],[3,4,1,"","encode_sig"],[3,4,1,"","fast_add"],[3,4,1,"","getG"],[3,4,1,"","get_privkey_format"],[3,4,1,"","get_pubkey_format"],[3,4,1,"","get_version_byte"],[3,4,1,"","hash160"],[3,4,1,"","hash_to_int"],[3,4,1,"","hex_to_b58check"],[3,4,1,"","hex_to_hash160"],[3,4,1,"","inv"],[3,4,1,"","is_privkey"],[3,4,1,"","is_pubkey"],[3,4,1,"","isinf"],[3,4,1,"","jacobian_add"],[3,4,1,"","jacobian_double"],[3,4,1,"","magicbyte_to_prefix"],[3,4,1,"","multiaccess"],[3,4,1,"","neg_privkey"],[3,4,1,"","neg_pubkey"],[3,4,1,"","num_to_var_int"],[3,4,1,"","pubkey_to_address"],[3,4,1,"","pubkey_to_hash"],[3,4,1,"","pubkey_to_hash_hex"],[3,4,1,"","pubtoaddr"],[3,4,1,"","ripemd160"],[3,4,1,"","sha256"],[3,4,1,"","slice"],[3,4,1,"","slowsha"],[3,4,1,"","subtract"],[3,4,1,"","subtract_privkeys"],[3,4,1,"","subtract_pubkeys"],[3,4,1,"","sum"],[3,4,1,"","to_jacobian"]],"cryptnoxpy.cryptos.py3specials":[[3,4,1,"","bin_dbl_sha256"],[3,4,1,"","bin_to_b58check"],[3,4,1,"","bytes_to_hex_string"],[3,4,1,"","changebase"],[3,4,1,"","decode"],[3,4,1,"","encode"],[3,4,1,"","from_byte_to_int"],[3,4,1,"","from_int_representation_to_bytes"],[3,4,1,"","from_int_to_byte"],[3,4,1,"","from_string_to_bytes"],[3,4,1,"","get_code_string"],[3,4,1,"","lpad"],[3,4,1,"","random_string"],[3,4,1,"","safe_from_hex"],[3,4,1,"","safe_hexlify"]],"cryptnoxpy.cryptos.ripemd":[[3,4,1,"","F0"],[3,4,1,"","F1"],[3,4,1,"","F2"],[3,4,1,"","F3"],[3,4,1,"","F4"],[3,4,1,"","R"],[3,1,1,"","RIPEMD160"],[3,4,1,"","RMD160Final"],[3,4,1,"","RMD160Transform"],[3,4,1,"","RMD160Update"],[3,1,1,"","RMDContext"],[3,4,1,"","ROL"],[3,4,1,"","new"]],"cryptnoxpy.cryptos.ripemd.RIPEMD160":[[3,3,1,"","__init__"],[3,3,1,"","copy"],[3,3,1,"","digest"],[3,3,1,"","hexdigest"],[3,3,1,"","update"]],"cryptnoxpy.cryptos.ripemd.RMDContext":[[3,3,1,"","__init__"],[3,3,1,"","copy"]],"cryptnoxpy.enums":[[1,1,1,"","AuthType"],[1,1,1,"","Derivation"],[1,1,1,"","KeyType"],[1,1,1,"","Origin"],[1,1,1,"","SeedSource"],[1,1,1,"","SlotIndex"]],"cryptnoxpy.enums.AuthType":[[1,2,1,"","NO_AUTH"],[1,2,1,"","PIN"],[1,2,1,"","USER_KEY"]],"cryptnoxpy.enums.Derivation":[[1,2,1,"","CURRENT_KEY"],[1,2,1,"","DERIVE"],[1,2,1,"","DERIVE_AND_MAKE_CURRENT"],[1,2,1,"","PINLESS_PATH"]],"cryptnoxpy.enums.KeyType":[[1,2,1,"","K1"],[1,2,1,"","R1"]],"cryptnoxpy.enums.Origin":[[1,2,1,"","FAKE"],[1,2,1,"","ORIGINAL"],[1,2,1,"","UNKNOWN"]],"cryptnoxpy.enums.SeedSource":[[1,2,1,"","DUAL"],[1,2,1,"","EXTENDED"],[1,2,1,"","EXTERNAL"],[1,2,1,"","INTERNAL"],[1,2,1,"","NO_SEED"],[1,2,1,"","SINGLE"],[1,2,1,"","WRAPPED"]],"cryptnoxpy.enums.SlotIndex":[[1,2,1,"","EC256R1"],[1,2,1,"","FIDO"],[1,2,1,"","RSA"]],"cryptnoxpy.exceptions":[[1,6,1,"","CardClosedException"],[1,6,1,"","CardException"],[1,6,1,"","CardNotBlocked"],[1,6,1,"","CardTypeException"],[1,6,1,"","CertificateException"],[1,6,1,"","ConnectionException"],[1,6,1,"","CryptnoxException"],[1,6,1,"","DataException"],[1,6,1,"","DataValidationException"],[1,6,1,"","DerivationSelectionException"],[1,6,1,"","EOSKeyError"],[1,6,1,"","FirmwareException"],[1,6,1,"","GenericException"],[1,6,1,"","GenuineCheckException"],[1,6,1,"","InitializationException"],[1,6,1,"","KeyAlreadyGenerated"],[1,6,1,"","KeyGenerationException"],[1,6,1,"","KeySelectionException"],[1,6,1,"","PinAuthenticationException"],[1,6,1,"","PinException"],[1,6,1,"","PukException"],[1,6,1,"","ReadPublicKeyException"],[1,6,1,"","ReaderException"],[1,6,1,"","SecureChannelException"],[1,6,1,"","SeedException"],[1,6,1,"","SoftLock"]],"cryptnoxpy.exceptions.GenericException":[[1,3,1,"","__init__"]],"cryptnoxpy.exceptions.PinException":[[1,3,1,"","__init__"]],"cryptnoxpy.exceptions.PukException":[[1,3,1,"","__init__"]],"cryptnoxpy.factory":[[1,4,1,"","get_card"]],"cryptnoxpy.reader":[[1,6,1,"","CardException"],[1,6,1,"","ConnectionException"],[1,1,1,"","NfcReader"],[1,1,1,"","Reader"],[1,6,1,"","ReaderException"],[1,1,1,"","SmartCard"],[1,4,1,"","get"]],"cryptnoxpy.reader.NfcReader":[[1,3,1,"","__init__"],[1,3,1,"","connect"],[1,3,1,"","send"]],"cryptnoxpy.reader.Reader":[[1,3,1,"","__init__"],[1,3,1,"","bool"],[1,3,1,"","connect"],[1,3,1,"","send"]],"cryptnoxpy.reader.SmartCard":[[1,3,1,"","__init__"],[1,3,1,"","connect"],[1,3,1,"","send"]],"exceptions":[[1,7,1,"","__version__"]]},"objnames":{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","attribute","Python attribute"],"3":["py","method","Python method"],"4":["py","function","Python function"],"5":["py","property","Python property"],"6":["py","exception","Python exception"],"7":["py","data","Python data"]},"objtypes":{"0":"py:module","1":"py:class","2":"py:attribute","3":"py:method","4":"py:function","5":"py:property","6":"py:exception","7":"py:data"},"terms":{"":[1,2,3,5,7],"0":[1,2,3,5,7],"0th":2,"0x00":[2,7],"0x01":2,"0x04":2,"1":[1,2,5,7],"10":1,"11":7,"12":2,"128":[1,3],"13":7,"15":[2,7],"16":[1,2],"160":[2,3],"1606938044258990275541962092341162602522202993782792835301376":3,"17":2,"18":2,"1st":2,"2":[1,2,3,5,7],"20":7,"2006168372":2,"2007":5,"2048":2,"256":[2,7],"256k1":7,"29":5,"3":[1,2,3,5,7],"32":[2,7],"332516148":2,"3600":0,"4":[2,5],"44":2,"4d0":5,"4d1":5,"5":[1,5],"580566270":2,"6":[5,7],"60":7,"62":2,"64":2,"65":2,"65537":2,"66":2,"68":1,"7":7,"75":1,"76":1,"78":2,"8":7,"82":1,"83":1,"88":1,"9":[0,2,7],"910196630":2,"A":[5,7],"As":5,"Be":7,"But":7,"By":2,"For":[2,5,7],"If":[2,5,7],"In":7,"It":[1,2,7],"No":1,"Not":1,"On":7,"Such":5,"The":[0,1,2,3,5,7],"Then":7,"There":[1,2,7],"To":7,"__init__":[1,2,3,6],"__version__":[1,6],"abil":[0,7],"abl":2,"abort":7,"about":[1,2,7],"abov":7,"absolut":7,"abstract":[1,2],"abstractmethod":[1,2],"accept":[5,7],"access":[1,3],"accessor":5,"accompani":5,"activ":1,"add":[0,1,2,3],"add_privkei":[1,3],"add_pubkei":[1,3],"addit":5,"addr":[3,7],"address":[2,3,5],"adher":0,"ae":1,"aes_decrypt":[1,6],"aes_encrypt":[1,6],"af_inet":7,"after":[1,7],"again":2,"against":2,"agent":7,"agnost":7,"ai":7,"algorithm":3,"alia":[1,2],"align":2,"aliv":[1,2],"all":[0,1,2,7],"allow":[0,2,5,7],"alreadi":[2,5],"also":[5,7],"altinstal":7,"among":5,"an":[0,1,2,3,5,7],"ani":[2,5,7],"answer":7,"anyon":2,"anyth":2,"apdu":[1,7],"api":[1,4,7],"applet":[2,7],"applet_vers":[1,2,7],"appli":5,"applic":[2,5,7],"apt":7,"ar":[2,5,7],"arg":[2,3],"argument":[3,5],"around":2,"arrai":7,"ask":[0,2,7],"asn1":7,"associ":[2,7],"asymmetr":2,"attach":[1,2],"auth":2,"auth_typ":[1,2],"authent":[0,1,6,7],"author":[0,5],"authtyp":[1,2,6],"automat":[3,7],"avail":[2,5,7],"awar":7,"b":[2,3,5],"b58check_to_bin":[1,3],"b58check_to_hex":[1,3],"back":[2,7],"backup":7,"bad":2,"base":[0,1,3,5,6,7],"basic":[2,7],"basic_g0":[1,6],"basic_g1":[1,6],"basicg0":[1,2],"basicg1":[1,2],"been":[1,2],"befor":[1,2,7],"beforehand":7,"behav":[2,7],"being":5,"below":[5,7],"better":7,"between":[2,7],"bienvenu":4,"bin_dbl_sha256":[1,3],"bin_hash160":[1,3],"bin_ripemd160":[1,3],"bin_sha256":[1,3],"bin_slowsha":[1,3],"bin_to_b58check":[1,3],"binari":[1,7],"binary_to_list":[1,6],"binary_util":6,"bind":[1,7],"bip":2,"bip32":[2,7],"bip39":7,"bit":[2,7],"bitcoin":3,"block":[2,3],"blockchain":7,"bool":[1,2,6],"both":5,"bound":5,"brew":7,"bui":7,"build":7,"build_al":7,"byte":[0,1,2,3,7],"bytearrai":7,"bytes_to_hex_str":[1,3],"c":[3,5],"cach":7,"cad":0,"call":[0,1,2,5,7],"can":[0,1,2,5,7],"cannot":7,"capabl":2,"car":2,"card":[0,1,3,6,7],"cardclosedexcept":[1,6],"cardexcept":[1,6],"cardnotblock":[1,2,6],"cardtypeexcept":[1,2,6],"case":[2,7],"ccid":7,"cd":7,"cento":7,"certain":[2,5],"certif":[0,1,2],"certificateexcept":[1,6],"challeng":[1,2],"chang":[2,5,7],"change_curv":[1,3],"change_pairing_kei":[1,2],"change_pin":[1,2],"change_puk":[1,2],"changebas":[1,3],"channel":[0,1,2,7],"char":7,"charact":0,"check":[0,2,7],"check_init":[1,2],"child":2,"children":7,"chip":[2,7],"choic":5,"choos":5,"chosen":7,"class":[0,1,2,3,5,7],"clear":[1,2,7],"client":7,"clone":7,"code":[0,1,2,5,7],"coin":3,"com":7,"combin":5,"command":[0,1,2,7],"commerci":7,"common":[2,7],"commonpairingdata":2,"commun":[1,2,4],"compat":[0,1,3,5],"complex":7,"compliant":7,"compress":[1,2,3],"comput":[2,5,7],"computation":7,"concern":5,"condit":[5,7],"configur":7,"confirm":7,"conn":[1,7],"connect":[0,2,6],"connectionexcept":[1,6],"consid":5,"contact":7,"contactless":7,"contain":[1,2,3,5,7],"content":6,"contextdecor":1,"control":2,"convei":5,"conveni":2,"convert":[0,1],"copi":[1,3,5],"copyright":5,"core":[3,7],"correct":[0,2,7],"correspond":[5,7],"couldn":1,"count":[1,3],"counter":2,"coupl":7,"cover":5,"creat":[0,1],"cred":2,"cred_id":2,"cryptnox":[1,2,3,4],"cryptnoxexcept":[1,6,7],"cryptnoxpi":6,"crypto":[1,6],"crypto_util":6,"cryptocurr":3,"cryptograph":[1,3],"cryptographi":3,"ctx":3,"curl":7,"current":[0,1,2,7],"current_kei":[1,2,6,7],"current_puk":2,"curv":[2,3],"custom":0,"custom_bit":[1,6],"custombit":[1,2],"custombitsbas":[1,2],"cycl":[1,2],"d":[3,5],"dai":7,"dan":4,"data":[0,1,2,5,7],"data_hash":7,"data_info":2,"dataexcept":[1,2,6],"datavalidationexcept":[1,2,6],"dbl_sha256":[1,3],"de":4,"debian":7,"debug":[0,1,2,5],"decid":5,"deciph":2,"decod":[1,3],"decode_privkei":[1,3],"decode_pubkei":[1,3],"decode_sig":[1,3],"decompress":[1,3],"decrypt":[1,2],"dedic":2,"deem":5,"default":2,"defin":5,"definit":[3,5],"delet":2,"depend":[0,1],"depth":7,"der":[2,7],"deriv":[0,1,2,6],"derivationselectionexcept":[1,2,6],"derive_and_make_curr":[1,6],"describ":1,"descript":2,"desir":2,"detail":[1,2,3,5,7],"detect":1,"deterministic_generate_k":[1,3],"dev":7,"devic":1,"dict":2,"dictionari":2,"didn":0,"differ":[1,2,5],"digest":[1,3],"digit":[2,3,7],"direct":5,"directli":2,"directori":7,"disabl":[2,7],"displai":5,"distinguish":5,"distribut":5,"divid":[1,3],"divis":2,"do":[2,5,7],"doc":7,"document":[0,5],"doe":5,"doesn":[0,2,7],"don":7,"done":[0,2,7],"download":7,"drg":7,"driver":[1,7],"dual":[1,2,6,7],"dual_seed_load":[1,2],"dual_seed_public_kei":[1,2],"dure":[0,1,2,5,7],"e":[2,3,5],"each":[5,7],"eas":7,"ec":2,"ec256r1":[1,2,6],"ec384":7,"ecdh":2,"ecdsa":[3,7],"ecdsa_verifi":[1,3],"ecdsa_verify_addr":[1,3],"eci":2,"ecp256k1":7,"ecp256r1":2,"effect":5,"effici":7,"effort":5,"either":5,"electrum_sig_hash":[1,3],"element":2,"ellipt":[2,3],"els":[2,7],"email":[1,2,7],"empti":[1,2],"enabl":[2,7],"encod":[1,3,7],"encode_privkei":[1,3],"encode_pubkei":[1,3],"encode_sig":[1,3],"encrypt":[1,2,7],"encrypted_data":2,"end":3,"engin":5,"ensur":5,"enter":2,"entri":2,"enum":6,"enumer":1,"environ":0,"eo":[1,2],"eoskeyerror":[1,6],"equal":2,"error":[0,1,2,7],"escap":7,"essenti":7,"establish":[1,2,7],"even":7,"event":5,"eventu":7,"ever":5,"everyon":5,"ex":7,"except":[0,2,5,6,7],"exclud":5,"execut":[5,7],"exist":2,"explain":5,"expon":2,"export":[1,2,3],"expos":7,"extend":[1,2,6,7],"extended_public_kei":[1,2],"extent":5,"extern":[1,6,7],"f":7,"f0":[1,3],"f1":[1,3],"f2":[1,3],"f3":[1,3],"f4":[1,3],"facil":5,"factori":[2,6,7],"failur":7,"faith":5,"fake":[1,2,6],"fals":[1,2,7],"fast_add":[1,3],"featur":2,"fedora":7,"fetch":2,"fewer":5,"fido":[1,2,6],"fido2":2,"field":2,"file":[0,5,7],"fill":0,"filter":2,"filter_eo":2,"find":5,"firmwar":1,"firmwareexcept":[1,6],"first":[2,7],"fix":2,"fj":3,"flag":0,"folder":7,"follow":[5,7],"forgotten":2,"form":[1,5],"format":[0,1,2,3,7],"formt":3,"forward":7,"found":[1,2,7],"foundat":5,"free":[2,5],"frm":3,"from":[0,1,2,5,7],"from_byte_to_int":[1,3],"from_int_representation_to_byt":[1,3],"from_int_to_byt":[1,3],"from_string_to_byt":[1,3],"fsf":5,"ftp":7,"full":7,"fulli":7,"function":[0,2,3,5,7],"further":7,"futur":5,"g":2,"g0":0,"gener":[0,1,2,3,5],"generate_random_numb":[1,2],"generate_se":[0,1,2,7],"generate_seed_wrapp":[1,2],"genericexcept":[1,2,6],"genuin":[0,1,2],"genuinecheckexcept":[1,2,6],"get":[0,1,2,6,7],"get_card":[1,6,7],"get_code_str":[1,3],"get_manufacturer_certif":[1,2],"get_privkey_format":[1,3],"get_pubkey_format":[1,3],"get_public_kei":[0,1,2],"get_public_key_clear":[1,2],"get_public_key_extend":[1,2],"get_version_byt":[1,3],"getg":[1,3],"git":7,"github":7,"gitlab":7,"give":[5,7],"given":[0,1,2,5],"gnu":[5,7],"go":[2,7],"good":5,"govern":5,"gpl":5,"gx":3,"gy":3,"ha":[1,2,7],"handl":[0,1,3,7],"handler":1,"hardcod":7,"hardwar":7,"hash":[2,3,7],"hash160":[1,3],"hash_to_int":[1,3],"hashed_data":2,"hasn":[1,2],"have":[5,7],"header":[1,5],"her":2,"herein":5,"hex":[0,2],"hex_to_b58check":[1,3],"hex_to_hash160":[1,3],"hexadecim":[1,2],"hexadecimal_to_list":[1,6],"hexdigest":[1,3],"hi":2,"hierarchi":7,"high":7,"histori":[1,2],"hold":1,"how":[1,2],"howev":7,"html":7,"http":[5,7],"human":2,"i":[0,1,2,5,7],"id":[2,7],"ident":[2,7],"immedi":7,"implement":[1,2,3],"import":7,"improv":0,"inc":5,"includ":[3,5],"incorpor":5,"incorrect":2,"increas":[0,2],"index":[1,2,7],"indic":0,"info":[1,2],"inform":[1,2,5,7],"init":[1,2,7],"initi":[0,1,2],"initialization_vector":1,"initializationexcept":[1,2,6],"inlin":5,"inp":3,"inplen":3,"input":[0,2],"insecur":7,"insert":2,"inspir":2,"instal":[0,5],"instanc":[1,7],"instead":0,"instruct":[0,7],"int":[1,2],"integ":[1,7],"integr":2,"intend":0,"intenum":1,"interfac":[1,2,5],"intermedi":7,"intern":[1,6,7],"inv":[1,3],"invalid":[1,2],"invok":5,"is_privkei":[1,3],"is_pubkei":[1,3],"isinf":[1,3],"isol":5,"issu":[1,2],"its":[5,7],"j8":7,"jacobian_add":[1,3],"jacobian_doubl":[1,3],"java":7,"join":1,"june":5,"just":7,"k":2,"k1":[1,2,6],"keep":[0,1,2,7],"kei":[0,1,2,3],"kernel":7,"key_typ":2,"keyalreadygener":[1,2,6],"keyexcept":2,"keygenerationexcept":[1,2,6],"keyselectionexcept":[1,6],"keytyp":[1,2,6],"kj":3,"kwarg":2,"la":4,"later":5,"layer":7,"layout":5,"length":[1,2,3,5],"less":[0,2],"lesser":[5,7],"letter":2,"level":7,"lgpl":5,"lib":7,"libbz2":7,"libncurses5":7,"libncursesw5":7,"libpcsclit":7,"librari":[0,1,4,5],"libreadlin":7,"libsqlite3":7,"libssl":7,"licens":4,"lifecycl":7,"like":[2,7],"limit":[0,2,5],"line":5,"link":[5,7],"linux":7,"list":[0,1,2,5,7],"list_to_hexadecim":[1,6],"listen":7,"lite":7,"llvm":7,"load":[2,7],"load_se":[1,2,7],"load_wrapped_se":[1,2],"lock":[0,1,2],"longer":2,"lpad":[1,3],"m":2,"mac":7,"macro":5,"made":[0,5],"magicbyt":3,"magicbyte_to_prefix":[1,3],"mai":[3,5],"main":[1,2,6],"make":[2,5,7],"manag":7,"mani":[2,7],"manner":5,"manufactur":2,"manufacturer_certif":[1,2],"master":7,"materi":5,"mathemat":3,"maximum":7,"md":1,"mean":[1,5],"meaning":5,"mechan":5,"messag":[0,1,2,3,7],"method":[0,1,2,7],"might":[2,7],"minim":5,"minlen":3,"miss":0,"mnemon":7,"mod":2,"mode":5,"modif":5,"modifi":5,"modul":[0,6,7],"more":[0,2,7],"most":7,"msg":3,"msghash":3,"multiaccess":[1,3],"multipl":[1,7],"must":[2,5,7],"n":3,"name":[1,2,7],"namedtupl":2,"necessari":5,"need":[2,5,7],"neg_privkei":[1,3],"neg_pubkei":[1,3],"network":2,"never":7,"new":[0,1,2,3,5,7],"new_pin":2,"new_puk":2,"next":7,"nfc":[1,2,7],"nfc_sign":2,"nfcreader":[1,6],"nft":[0,1,6],"no_auth":[1,6],"no_se":[0,1,6],"node":[2,7],"nonc":2,"none":[1,2,3,5],"nor":7,"notabl":0,"note":7,"notic":5,"now":7,"num_to_var_int":[1,3],"number":[0,1,2,5,7],"number_of_retri":1,"numer":5,"obj":3,"object":[1,2,3,5,7],"observ":7,"occur":[1,2],"off":[1,2,7],"old":7,"onc":7,"one":[0,5,7],"onli":[2,5,7],"open":[0,1,2,7],"openpgp":2,"opensc":7,"oper":[0,1,2,3,5,7],"optim":[3,7],"option":[0,1,2,3,5,7],"order":7,"org":[5,7],"origin":[0,1,2,6],"os":0,"osx":7,"other":[1,2,3,5,7],"otherwis":5,"output":[2,7],"over":[2,7],"overview":4,"owner":2,"p":3,"p1":[2,3],"p2":3,"packag":[4,6,7],"pad":[1,2],"pad_data":[1,6],"pair":2,"pairing_kei":[2,7],"pairing_secret":[2,7],"pairingkei":7,"param":2,"paramet":[0,1,2,5,7],"pare":7,"parent":7,"paringkeyslot0":7,"part":5,"parti":2,"particular":5,"pass":[0,5,7],"path":[0,1,2,7],"path_str":1,"path_to_byt":[1,6],"payload":1,"pbr":0,"pc":7,"pcsc":7,"pcscd":7,"per":7,"perform":[5,7],"perman":5,"permiss":5,"permit":5,"phase":7,"phase2":7,"pin":[0,1,2,6],"pin_authent":[1,2],"pin_nam":2,"pin_rul":[1,2],"pinauthenticationexcept":[1,6],"pinexcept":[1,2,6],"pinless":2,"pinless_en":[1,2],"pinless_path":[1,6],"pip":7,"pip3":7,"pipenv":0,"pipfil":0,"place":[5,7],"plain":1,"pn533":7,"pn533_usb":7,"point":7,"portion":5,"posit":1,"possibl":7,"power":[1,2],"predefin":1,"present":[1,2,3,5,7],"previou":0,"previous":0,"primari":2,"print":[0,1,2,7],"priv":3,"privat":[0,2],"privkei":3,"problem":5,"process":1,"produc":5,"product":[1,2],"program":5,"project":[0,5],"promin":5,"prop":3,"properli":5,"properti":[0,2],"protect":[2,7],"provid":[0,1,2,3,5,7],"proxi":5,"pub":3,"pubexport":2,"pubkei":[2,3],"pubkey_to_address":[1,3],"pubkey_to_hash":[1,3],"pubkey_to_hash_hex":[1,3],"public":[1,2,3,5,7],"public_kei":2,"publish":5,"pubtoaddr":[1,3],"puk":[1,2,7],"puk_cod":2,"puk_length":[1,2],"puk_nam":2,"puk_rul":[1,2],"pukexcept":[1,2,6],"pure":3,"purpos":5,"py2speci":[1,6],"py3speci":[1,6],"pypi":0,"pyscard":[0,7],"python":[0,3,4],"python3":7,"q":3,"queri":[1,7],"r":[1,3,7],"r1":[1,6],"rais":[0,1,2],"random":[2,7],"random_str":[1,3],"randomli":7,"read":[0,1,2,7],"readabl":2,"reader":[2,6,7],"readerexcept":[1,6,7],"reading_index_offset":2,"readm":1,"readpublickeyexcept":[1,2,6],"receiv":[1,2,5],"receive_long":1,"recip":7,"recombin":5,"recommend":7,"reconnect":7,"recov":7,"refer":[4,5],"regardless":2,"registr":7,"reinstal":7,"rel":[2,7],"relat":1,"relev":2,"relink":5,"remain":5,"remot":[0,1],"remote_read":[1,6],"remov":[1,2,7],"remove_pad":[1,6],"repres":2,"represent":1,"reproduc":5,"request":[0,1],"requir":[0,1,2,5],"reset":[1,2,7],"resili":0,"respons":[0,1,2,7],"restrict":5,"result":[1,2],"retri":[1,7],"retriev":[1,7],"return":[0,1,2,3,7],"revers":5,"revis":5,"rfid":7,"rhel":7,"right":[2,7],"ripemd":[1,6],"ripemd160":[1,3],"rj":3,"rm":7,"rmd160final":[1,3],"rmd160transform":[1,3],"rmd160updat":[1,3],"rmdcontext":[1,3],"rmmod":7,"rol":[1,3],"root":7,"rsa":[1,2,6],"rst":0,"rtype":2,"rule":2,"run":[5,7],"s_hex":3,"safe":7,"safe_from_hex":[1,3],"safe_hexlifi":[1,3],"same":[0,2,5,7],"save":[2,7],"scheme":[2,7],"second":7,"secp256k1":3,"secret":[2,7],"section":[5,7],"secur":[0,1,2,7],"securechannelexcept":[1,2,6],"see":[1,2,3,7],"seed":[0,1,2],"seed_sourc":[0,1,2],"seedexcept":[1,2,6],"seedsourc":[0,1,2,6],"select":[0,1,2,7],"select_apdu":[1,2],"self":1,"semant":0,"send":[1,2,6,7],"send_apdu":[1,6],"send_encrypt":[1,6],"sent":[1,2],"sep":1,"separ":1,"sequenc":7,"serial":[1,2,7],"serial_numb":[1,2,7],"server":7,"server_ip":7,"server_port":7,"servic":7,"session":[2,7],"session_public_kei":[1,2],"set":[0,2],"set_clearpubkei":[1,2],"set_extended_public_kei":[1,2],"set_item_callback":2,"set_pairing_kei":7,"set_pin_authent":[1,2],"set_pinless_path":[1,2],"set_pubexport":[1,2],"set_xpubread":[1,2],"setup":0,"setuptool":7,"sever":7,"sha2":[2,7],"sha256":[1,3],"shall":5,"share":[5,7],"should":[2,7],"show":[0,1,2],"side":5,"sig":3,"sign":[0,1,2,3,7],"sign_publ":[1,2],"signatur":[1,2,3],"signature_check":[1,2],"signaturecheckresult":[1,2],"signing_count":[1,2],"similar":5,"simpli":7,"simplifi":2,"sinc":7,"singl":[1,5,6],"size":[0,2],"sj":3,"slice":[1,3],"slip17":2,"slot":[1,2],"slot_index":2,"slot_offset":2,"slotindex":[1,2,6],"slowsha":[1,3],"small":5,"smart":1,"smartcard":[1,2,6,7],"so":[2,7],"sock_stream":7,"socket":[1,7],"soft":1,"softlock":[1,2,6],"softwar":[5,7],"some":7,"someon":2,"sourc":[1,2,3,5,7],"special":1,"specif":[1,3],"specifi":[3,5],"sphynx":7,"spirit":5,"ssh":7,"stai":0,"standard":[1,7],"start":[3,7],"startup":7,"stat":1,"state":3,"statement":5,"static":2,"statu":[1,2,7],"still":[2,5,7],"store":[0,7],"str":[1,2],"string":[1,2,3,7],"structur":5,"subclass":5,"submodul":6,"subpackag":6,"subsequ":7,"subtract":[1,3],"subtract_privkei":[1,3],"subtract_pubkei":[1,3],"succeed":2,"sudo":7,"suitabl":5,"sum":[1,3],"supplement":5,"suppli":5,"support":[0,1,2,7],"sure":7,"swig":7,"switch":7,"symbol":3,"symmetr":2,"system":5,"systemctl":7,"t":[0,1,2,7],"take":[2,7],"taken":5,"tar":7,"techniqu":4,"templat":5,"ten":5,"term":5,"test":7,"tgz":7,"than":5,"thei":7,"thi":[0,1,2,3,5],"thing":1,"third":2,"thousand":7,"through":[1,7],"throw":[0,1],"time":[2,5,7],"tk":7,"to_jacobian":[1,3],"togeth":5,"too":7,"tpm":2,"track":7,"tree":2,"tri":1,"true":[2,7],"try":[1,7],"tupl":[1,2],"turn":[1,2,7],"twice":1,"two":[1,7],"type":[0,1,2,3,7],"u":7,"ubuntu":7,"uer":2,"uid":2,"unblock":1,"unblock_pin":[0,1,2],"uncombin":5,"uncompress":2,"under":[5,7],"unhandl":0,"uninstal":7,"uniqu":7,"unknown":[1,6],"unlock":[1,7],"unlock_pin":0,"until":7,"up":[0,2,7],"updat":[0,1,3],"upload":7,"uri":2,"us":[0,1,2,3,5],"user":[0,1,2,5,7],"user_data":[1,6],"user_kei":[1,6],"user_key_add":[1,2],"user_key_challenge_response_nonc":[1,2],"user_key_challenge_response_open":[1,2],"user_key_delet":[1,2],"user_key_en":[1,2],"user_key_info":[1,2],"user_key_signature_open":[1,2],"userdata":[1,2],"userdatabas":[1,2],"util":[1,3,5,7],"v":3,"v3":5,"val":3,"valid":[0,1,2],"valid_kei":[1,2],"valid_pin":[1,2],"valid_puk":[1,2],"valu":[0,1,2,7],"variabl":[1,2],"variou":2,"vbyte":3,"vector":1,"verbatim":5,"veri":7,"verif":[2,3],"verifi":[0,2],"verify_pin":[1,2,7],"version":[0,1,2,5,7],"volum":7,"wa":[1,2,5,7],"wai":7,"wallet":7,"want":7,"wasn":[0,1],"we":7,"well":5,"were":7,"weren":1,"wget":7,"whatev":5,"when":[0,2,5,7],"where":[2,5],"whether":[2,5],"which":[1,2,5,7],"window":0,"within":2,"without":[0,1,2,5],"word":7,"work":[2,5],"would":[5,7],"wrap":[1,6],"wrapper":2,"write":[0,2],"www":7,"x":[2,3],"x9":2,"xantar":1,"xf":7,"xpub":2,"xz":7,"y":[2,3,7],"you":[5,7],"your":[5,7],"yum":7,"z":3,"zlib1g":7},"titles":["Changelog","cryptnoxpy package","cryptnoxpy.card package","cryptnoxpy.cryptos package","Cryptnoxpy Documentation","License","API Reference","Cryptnoxpy Overview"],"titleterms":{"0":0,"01":0,"03":0,"06":0,"07":0,"08":0,"09":0,"1":0,"10":0,"11":0,"13":0,"14":0,"2":0,"20":0,"2021":0,"2022":0,"2023":0,"21":0,"24":0,"28":0,"29":0,"3":0,"31":0,"4":0,"5":0,"6":0,"ad":0,"administr":7,"api":6,"authent":2,"base":2,"basic_g0":2,"basic_g1":2,"binary_util":1,"card":2,"chang":0,"changelog":0,"commun":7,"connect":[1,7],"content":[1,2,3,4],"cryptnox":7,"cryptnoxpi":[1,2,3,4,7],"crypto":3,"crypto_util":1,"custom_bit":2,"deriv":7,"document":[4,7],"ec":7,"enum":1,"except":1,"factori":1,"fix":0,"gener":7,"initi":7,"instal":7,"issu":7,"kei":7,"librari":7,"licens":[5,7],"main":3,"modul":[1,2,3],"nft":2,"overview":7,"packag":[1,2,3],"pair":7,"pin":7,"py2speci":3,"py3speci":3,"python":7,"reader":1,"recoveri":7,"refer":6,"remot":7,"remov":0,"requir":7,"ripemd":3,"seed":7,"signatur":7,"submodul":[1,2,3],"subpackag":1,"system":7,"thi":7,"unreleas":0,"updat":7,"us":7,"user_data":2}})